<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>吴志鹏｜Payne-Wu</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://paynewu.com/"/>
  <updated>2021-09-03T19:35:35.679Z</updated>
  <id>https://paynewu.com/</id>
  
  <author>
    <name>吴志鹏</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mysql优化</title>
    <link href="https://paynewu.com/507251385.html"/>
    <id>https://paynewu.com/507251385.html</id>
    <published>2021-09-03T16:27:43.000Z</published>
    <updated>2021-09-03T19:35:35.679Z</updated>
    
    <content type="html"><![CDATA[<p>mysql优化老生常谈了，但却也离不开业务。脱离业务来讲mysql可以从两个方面进行优化</p><ul>    <li>        <p>安全优化（业务持续性）</p>    </li>    <li>        <p>性能优化（业务高效性）</p>    </li></ul><p>所谓优化，个人认为有两大需要提前知道的<strong>稳定性和业务可持续性通常比性能更重要</strong>，<strong>优化是由业务需要驱使的</strong></p><p>通常优化也与操作系统、运行环境等息息相关，结合业务适合自己才是最好的。</p><h2 id="安全优化"><a href="#安全优化" class="headerlink" title="安全优化"></a>安全优化</h2><p>足够强度的安全是保证业务正常运行的基石，安全优化通常可以以系统安全，应用程序安全，与sql安全。</p><h3 id="系统安全"><a href="#系统安全" class="headerlink" title="系统安全"></a>系统安全</h3><p><strong>物理安全</strong></p><p>物理环境安全，小微企业一般使用云服务器，大型企业一般有多个机房，实现异地多活</p><p><strong>防火墙策略、关闭或切换不必要的端口</strong></p><blockquote>    <ol>        <li>修改常见应用默认端口，22、3306、27017、6379等</li>    </ol></blockquote><p><strong>账户安全</strong></p><p>用户连接权限、用户权限</p><blockquote>    <ol>        <li>禁止root远程</li>        <li>账号管理（密码强度、用户权限）</li>    </ol></blockquote><p><strong>源代码文件目录权限管理</strong></p><p><strong>备份</strong>等</p><h3 id="MySQL安全"><a href="#MySQL安全" class="headerlink" title="MySQL安全"></a>MySQL安全</h3><p><a href="https://www.cnblogs.com/doublexi/p/9732274.html" target="_blank" rel="noopener">https://www.cnblogs.com/doublexi/p/9732274.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mysql优化老生常谈了，但却也离不开业务。脱离业务来讲mysql可以从两个方面进行优化&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;
        &lt;p&gt;安全优化（业务持续性）&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;p&gt;性能优化（业务高效性）&lt;/p&gt;
 
      
    
    </summary>
    
    
      <category term="c1" scheme="https://paynewu.com/categories/c1/"/>
    
      <category term="c2" scheme="https://paynewu.com/categories/c1/c2/"/>
    
      <category term="c3" scheme="https://paynewu.com/categories/c1/c2/c3/"/>
    
    
      <category term="t1" scheme="https://paynewu.com/tags/t1/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes NFS实践</title>
    <link href="https://paynewu.com/2760374101.html"/>
    <id>https://paynewu.com/2760374101.html</id>
    <published>2021-09-03T15:46:49.000Z</published>
    <updated>2021-09-03T15:47:49.604Z</updated>
    
    <content type="html"><![CDATA[<h2 id="NFS实践"><a href="#NFS实践" class="headerlink" title="NFS实践"></a>NFS实践</h2><h3 id="安装NFS"><a href="#安装NFS" class="headerlink" title="安装NFS"></a>安装NFS</h3><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre>            </td>            <td class="code">                <pre><span class="line">yum install -y nfs-common nfs-utils rpcbind</span><br><span class="line">mkdir /nfs &amp;&amp; chmod 766 /nfs &amp;&amp; chown nfsnobody /nfs/</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"/nfs *(rw,no_root_squash,no_all_squash,sync)"</span> &gt;&gt; /etc/exports</span><br><span class="line">systemctl restart rpcbind &amp;&amp; systemctl restart nfs &amp;&amp; systemctl status rpcbind &amp;&amp; systemctl status nfs</span><br></pre>            </td>        </tr>    </table></figure><h4 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h4><figure class="highlight dart">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre>            </td>            <td class="code">                <pre><span class="line">showmount -e $IP</span><br><span class="line">mkdir /test &amp;&amp; cd $_ &amp;&amp; mount -t nfs $IP:/nfs /test</span><br><span class="line">echo <span class="string">"asdsadsa"</span> &gt;&gt; a.txt</span><br><span class="line">umount /test &amp;&amp; rm -rf /test</span><br></pre>            </td>        </tr>    </table></figure><h3 id="部署PV"><a href="#部署PV" class="headerlink" title="部署PV"></a>部署PV</h3><figure class="highlight yaml">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfspv-master</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">10Gi</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/nfs</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.27</span> <span class="comment"># 节点ip</span></span><br></pre>            </td>        </tr>    </table></figure><h3 id="PVC"><a href="#PVC" class="headerlink" title="PVC"></a>PVC</h3><figure class="highlight yaml">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">PersistentVolume</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nfspv-master</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">capacity:</span></span><br><span class="line">    <span class="attr">storage:</span> <span class="string">10Gi</span></span><br><span class="line">  <span class="attr">volumeMode:</span> <span class="string">Filesystem</span></span><br><span class="line">  <span class="attr">accessModes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">ReadWriteOnce</span></span><br><span class="line">  <span class="attr">persistentVolumeReclaimPolicy:</span> <span class="string">Retain</span></span><br><span class="line">  <span class="attr">storageClassName:</span> <span class="string">nfs</span></span><br><span class="line">  <span class="attr">nfs:</span></span><br><span class="line">    <span class="attr">path:</span> <span class="string">/nfs</span></span><br><span class="line">    <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.0</span><span class="number">.27</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">wangyanglinux/myapp:v2</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">www</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/usr/share/nginx/html</span></span><br><span class="line">  <span class="attr">volumeClaimTemplates:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">www</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">accessModes:</span> <span class="string">[</span> <span class="string">"ReadWriteOnce"</span> <span class="string">]</span></span><br><span class="line">      <span class="attr">storageClassName:</span> <span class="string">"nfs"</span></span><br><span class="line">      <span class="attr">resources:</span></span><br><span class="line">        <span class="attr">requests:</span></span><br><span class="line">          <span class="attr">storage:</span> <span class="string">1Gi</span></span><br></pre>            </td>        </tr>    </table></figure><h3 id="验证-1"><a href="#验证-1" class="headerlink" title="验证"></a>验证</h3><figure class="highlight maxima">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line">kubectl <span class="built_in">get</span> <span class="built_in">pv</span></span><br><span class="line">kubectl desc</span><br></pre>            </td>        </tr>    </table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gu3v3oji9fj62090u047b02.jpg" alt="image-20210903233505574"></p><figure class="highlight lsl">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># <span class="number">192.168</span><span class="number">.0</span><span class="number">.27</span> /nfs</span><br><span class="line">echo <span class="string">"asds"</span>  &gt; index.html</span><br><span class="line">kubectl get pod -o wid</span><br></pre>            </td>        </tr>    </table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gu3vd2jo46j61vk04uace02.jpg" alt="image-20210903234426686"></p><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line">curl 10.244.1.53</span><br><span class="line"><span class="comment"># asds</span></span><br></pre>            </td>        </tr>    </table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;NFS实践&quot;&gt;&lt;a href=&quot;#NFS实践&quot; class=&quot;headerlink&quot; title=&quot;NFS实践&quot;&gt;&lt;/a&gt;NFS实践&lt;/h2&gt;
&lt;h3 id=&quot;安装NFS&quot;&gt;&lt;a href=&quot;#安装NFS&quot; class=&quot;headerlink&quot; title=&quot;安装
      
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://paynewu.com/categories/Kubernetes/"/>
    
      <category term="NFS" scheme="https://paynewu.com/categories/Kubernetes/NFS/"/>
    
    
      <category term="Kubernetes" scheme="https://paynewu.com/tags/Kubernetes/"/>
    
      <category term="NFS" scheme="https://paynewu.com/tags/NFS/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的SQL使用之下</title>
    <link href="https://paynewu.com/3191410054.html"/>
    <id>https://paynewu.com/3191410054.html</id>
    <published>2021-09-02T13:46:39.000Z</published>
    <updated>2021-09-02T18:34:09.411Z</updated>
    
    <content type="html"><![CDATA[<h2 id="mysql用户管理"><a href="#mysql用户管理" class="headerlink" title="mysql用户管理"></a>mysql用户管理</h2><blockquote>    <p> DCL（Data Control Language，数据控制语言）：用于定义数据库的访问权限和安全级别，主要包含GRANT、REVOKE、COMMIT和ROLLBACK等语句。</p></blockquote><p><strong>mysql用户管理主要涉及到用户的增删改查与权限管理</strong></p><p>mysql中存在4个控制权限的表，分别为user表，db表，tables_priv表，columns_priv表</p><p><strong>权限表的验证过程</strong></p><ol>    <li>先从user表中的Host,User,Password这3个字段中判断连接的ip、用户名、密码是否存在，存在则通过验证。</li>    <li>通过身份认证后，进行权限分配，按照user，db，tables_priv，columns_priv的顺序进行验证。即先检查全局权限表user，如果user中对应的权限为Y，则此用户对所有数据库的权限都为Y，将不再检查db, tables_priv,columns_priv；如果为N，则到db表中检查此用户对应的具体数据库，并得到db中为Y的权限；如果db中为N，则检查tables_priv中此数据库对应的具体表，取得表中的权限Y，以此类推。</li></ol><p><strong>MySQL 权限级别</strong><br>全局性的管理权限： 作用于整个MySQL实例级别<br>数据库级别的权限： 作用于某个指定的数据库上或者所有的数据库上<br>数据库对象级别的权限：作用于指定的数据库对象上（表、视图等）或者所有的数据库对象上</p><h3 id="用户操作"><a href="#用户操作" class="headerlink" title="用户操作"></a>用户操作</h3><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 创建用户</span><br><span class="line">create user user_name@&#39;host&#39; identified by &#39;password&#39;;</span><br><span class="line"># example: </span><br><span class="line"># create user acs@&#39;10.0.0.%&#39; identified by &#39;123123&#39;;</span><br></pre>            </td>        </tr>    </table></figure><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 删除用户</span><br><span class="line">drop user user_name@&#39;host&#39;;</span><br><span class="line"># example:</span><br><span class="line"># drop user acs@&#39;10.0.0.%&#39;</span><br><span class="line"># DELETE FROM &#96;user&#96; WHERE &#96;user&#96;.&#96;Host&#96; &#x3D; &#39;10.0.0.%&#39; AND &#96;user&#96;.&#96;User&#96; &#x3D; &#39;acs&#39;</span><br></pre>            </td>        </tr>    </table></figure><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 修改用户</span><br><span class="line">alter user user_name@&#39;host&#39; identified by &#39;password&#39;;</span><br><span class="line"># example</span><br><span class="line">## 修改密码</span><br><span class="line">alter user acs@&#39;10.0.0.%&#39; identified by &#39;321312312123&#39;;</span><br><span class="line">## 修改 host</span><br><span class="line">UPDATE &#96;user&#96; SET &#96;Host&#96; &#x3D; &#39;%&#39; WHERE &#96;user&#96;.&#96;Host&#96; &#x3D; &#39;10.0.0.%&#39; AND &#96;user&#96;.&#96;User&#96; &#x3D; &#39;acs&#39;</span><br><span class="line">## 修改权限</span><br><span class="line">UPDATE &#96;user&#96; SET &#96;Select_priv&#96; &#x3D; &#39;Y&#39; WHERE &#96;user&#96;.&#96;Host&#96; &#x3D; &#39;%&#39; AND &#96;user&#96;.&#96;User&#96; &#x3D; &#39;acs&#39;</span><br><span class="line">UPDATE &#96;user&#96; SET &#96;Select_priv&#96; &#x3D; &#39;Y&#39;, &#96;Delete_priv&#96; &#x3D; &#39;Y&#39; WHERE &#96;user&#96;.&#96;Host&#96; &#x3D; &#39;%&#39; AND &#96;user&#96;.&#96;User&#96; &#x3D; &#39;acs&#39;</span><br></pre>            </td>        </tr>    </table></figure><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 删除用户</span><br><span class="line">drop user user_name@&#39;host&#39;;</span><br><span class="line"># example</span><br><span class="line">drop user acs@&#39;%&#39;</span><br><span class="line">DELETE FROM &#96;user&#96; WHERE &#96;user&#96;.&#96;Host&#96; &#x3D; &#39;10.0.0.%&#39; AND &#96;user&#96;.&#96;User&#96; &#x3D; &#39;acs&#39;</span><br></pre>            </td>        </tr>    </table></figure><blockquote>    <p>user_name：用户名</p>    <p>host ：可允许连接ip(Localhost代表本机， 127.0.0.1代表ipv4本机地址， ::1代表ipv6的本机地址,)</p>    <p>password：用户密码</p></blockquote><h2 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h2><p>权限可细分为操作权限与操作范围</p><p>常用权限介绍</p><figure class="highlight dart">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>            </td>            <td class="code">                <pre><span class="line">ALL:SELECT,INSERT, UPDATE, DELETE, CREATE, DROP, RELOAD, SHUTDOWN, PROCESS, FILE, REFERENCES, INDEX, ALTER, SHOW DATABASES, SUPER, CREATE TEMPORARY TABLES, LOCK TABLES, EXECUTE, REPLICATION SLAVE, REPLICATION CLIENT, CREATE VIEW, SHOW VIEW, CREATE ROUTINE, ALTER ROUTINE, CREATE USER, EVENT, TRIGGER, CREATE TABLESPACE</span><br><span class="line">ALL : 所有权限，一般是普通管理员拥有的</span><br><span class="line"><span class="keyword">with</span> grant option：给别的用户授权的功能</span><br></pre>            </td>        </tr>    </table></figure><p>权限作用范围</p><figure class="highlight dart">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>            </td>            <td class="code">                <pre><span class="line">*.*               ----&gt;所有：管理员用户</span><br><span class="line">dbname.*          ----&gt;指定库下所有：开发和应用用户</span><br><span class="line">dbname.t1----&gt;指定表</span><br></pre>            </td>        </tr>    </table></figure><p><strong>开发人员用户授权流程</strong></p><ol>    <li>你从哪来</li>    <li>对谁操作</li>    <li>权限</li>    <li>密码要求</li></ol><h3 id="权限"><a href="#权限" class="headerlink" title="权限"></a>权限</h3><p>可以使用GRANT给用户添加权限，权限会自动叠加，不会覆盖之前授予的权限，比如你先给用户添加一个SELECT权限，后来又给用户添加了一个INSERT权限，那么该用户就同时拥有了SELECT和INSERT权限</p><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 查看MYSQL有哪些用户</span><br><span class="line">select user,host from mysql.user;</span><br><span class="line"># 查看权限</span><br><span class="line">show grants for user_name@&#39;host&#39;;</span><br></pre>            </td>        </tr>    </table></figure><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 授权</span><br><span class="line">grant 权限 on 权限范围 to 用户 identified by 密码 with grant option;</span><br></pre>            </td>        </tr>    </table></figure><p> <strong>all privileges：</strong>表示将所有权限授予给用户。也可指定具体的权限，如：SELECT、CREATE、DROP等。<br> <strong>on：</strong>表示这些权限对哪些数据库和表生效，格式：数据库名.表名，这里写“<em>”表示所有数据库，所有表。如果我要指定将权限应用到test库的user表中，可以这么写：test.user<br> <strong>to：</strong>将权限授予哪个用户。格式：”用户名”@”登录IP或域名”。%表示没有限制，在任何主机都可以登录。比如：”payne”@”192.168.0%”，表示yangxin这个用户只能在192.168.0IP段登录<br> <strong>•identified by：</strong>指定用户的登录密码<br> <em>*•with grant option：</em></em>表示允许用户将自己的权限授权给其它用户 </p><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 收回权限</span><br><span class="line">revoke delete on 权限范围 from 用户@‘host’</span><br><span class="line">revoke delete on app.*  from app@&#39;10.0.0.%&#39;；</span><br></pre>            </td>        </tr>    </table></figure><h3 id="如何授权"><a href="#如何授权" class="headerlink" title="如何授权"></a>如何授权</h3><p>用户的权限一定是与业务分离不开的，但通常普通用户会</p><ul>    <li>禁用删除权限</li>    <li>规定范围</li></ul><h2 id="如何做好用户管理"><a href="#如何做好用户管理" class="headerlink" title="如何做好用户管理"></a>如何做好用户管理</h2><ul>    <li>密码系数足够高</li>    <li>root禁用远程登录</li>    <li>分级别，类似于公司管理。</li></ul><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre>            </td>            <td class="code">                <pre><span class="line">8.0在grant命令添加新特性</span><br><span class="line">建用户和授权分开了</span><br><span class="line">grant 不再支持自动创建用户了，不支持改密码</span><br><span class="line">授权之前，必须要提前创建用户。</span><br></pre>            </td>        </tr>    </table></figure><ul>    <li>执行Grant,revoke,set password,rename user命令修改权限之后， MySQL会自动将修改后的权限信息同步加载到系统内存中</li>    <li>如果执行insert/update/delete操作上述的系统权限表之后，则必须再执行刷新权限命令才能同步到系统内存中，刷新权限命令包括： <code>flush privileges</code>/mysqladmin flush-privileges / mysqladmin reload</li>    <li>如果是修改tables和columns级别的权限，则客户端的下次操作新权限就会生效</li>    <li>如果是修改database级别的权限，则新权限在客户端执行use database命令后生效</li>    <li>如果是修改global级别的权限，则需要重新创建连接新权限才能生效</li>    <li>如果是修改global级别的权限，则需要重新创建连接新权限才能生效 (例如修改密码)</li></ul><p>mysql user表</p><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:left"><strong>名字</strong></th>                <th style="text-align:left"><strong>类型</strong></th>                <th style="text-align:left">Null</th>                <th style="text-align:left">主键</th>                <th style="text-align:left">默认</th>                <th style="text-align:left"></th>                <th></th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:left">Host</td>                <td style="text-align:left">char(255)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left">PRI</td>                <td style="text-align:left"></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">User</td>                <td style="text-align:left">char(32)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left">PRI</td>                <td style="text-align:left"></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Select_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Insert_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Update_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Delete_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Create_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Drop_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Reload_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Shutdown_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Process_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">File_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Grant_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">References_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Index_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Alter_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Show_db_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Super_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Create_tmp_table_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Lock_tables_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Execute_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Repl_slave_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Repl_client_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Create_view_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Show_view_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Create_routine_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Alter_routine_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Create_user_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Event_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Trigger_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Create_tablespace_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">ssl_type</td>                <td style="text-align:left">enum(‘’,’ANY’,’X509’,’SPECIFIED’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left"></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">ssl_cipher</td>                <td style="text-align:left">blob</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">x509_issuer</td>                <td style="text-align:left">blob</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">x509_subject</td>                <td style="text-align:left">blob</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">max_questions</td>                <td style="text-align:left">int unsigned</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">0</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">max_updates</td>                <td style="text-align:left">int unsigned</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">0</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">max_connections</td>                <td style="text-align:left">int unsigned</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">0</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">max_user_connections</td>                <td style="text-align:left">int unsigned</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">0</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">plugin</td>                <td style="text-align:left">char(64)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">caching_sha2_password</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">authentication_string</td>                <td style="text-align:left">text</td>                <td style="text-align:left">YES</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">password_expired</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">password_last_changed</td>                <td style="text-align:left">timestamp</td>                <td style="text-align:left">YES</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">password_lifetime</td>                <td style="text-align:left">smallint unsigned</td>                <td style="text-align:left">YES</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">account_locked</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Create_role_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Drop_role_priv</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">NO</td>                <td style="text-align:left"></td>                <td style="text-align:left">N</td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Password_reuse_history</td>                <td style="text-align:left">smallint unsigned</td>                <td style="text-align:left">YES</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Password_reuse_time</td>                <td style="text-align:left">smallint unsigned</td>                <td style="text-align:left">YES</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">Password_require_current</td>                <td style="text-align:left">enum(‘N’,’Y’)</td>                <td style="text-align:left">YES</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>                <td></td>            </tr>            <tr>                <td style="text-align:left">User_attributes</td>                <td style="text-align:left">json</td>                <td style="text-align:left">YES</td>                <td style="text-align:left"></td>                <td style="text-align:left"><em>NULL</em></td>                <td style="text-align:left"></td>            </tr>        </tbody>    </table></div>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;mysql用户管理&quot;&gt;&lt;a href=&quot;#mysql用户管理&quot; class=&quot;headerlink&quot; title=&quot;mysql用户管理&quot;&gt;&lt;/a&gt;mysql用户管理&lt;/h2&gt;
&lt;blockquote&gt;
    &lt;p&gt; DCL（Data Control Langua
      
    
    </summary>
    
    
      <category term="数据库" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://paynewu.com/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://paynewu.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>docker分层构建</title>
    <link href="https://paynewu.com/2890729769.html"/>
    <id>https://paynewu.com/2890729769.html</id>
    <published>2021-09-02T10:08:44.000Z</published>
    <updated>2021-09-02T18:37:30.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>​ 在构建、部署、测试等情景中下不知你也是否遇到过这么几个问题，构建慢、依赖安装慢、重复性构建。以至于每一次采用docker来构建时，都需要等上那么几分钟。有时候是非常的浪费时间，那么是否有方法进行一次分离构建呢。当然正如docker口号所说的那般”<strong>Build once，Run anywher</strong>“，</p><p>那么该如何解决“<strong>构建慢、依赖安装慢、重复性构建</strong>”的问题呢，看似三个或者更多问题，其实归根结底是一个问题——分层构建</p><h2 id="分层构建"><a href="#分层构建" class="headerlink" title="分层构建"></a>分层构建</h2><p>想深层理解docker的分层构建，不得不从docker的设计特性出发。虚拟机与docker结构，如下图所示。</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gu2gf5gk5aj60kn0c40tr02.jpg" alt="image-20210902182150947"></p><p><strong>一层一层的分层结构</strong>，那么所谓分层构建只需要将<strong>环境依赖</strong>与<strong>业务代码</strong>分开构建即可。实现如下</p><ul>    <li>        <p>短时间内环境依赖构建一次且仅构建一次</p>    </li>    <li>        <p>业务代码触发构建</p>    </li></ul><h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><h3 id="python"><a href="#python" class="headerlink" title="python"></a>python</h3><figure class="highlight dockerfile">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment">#构建环境依赖</span></span><br><span class="line"><span class="comment">## 拉取pythoo镜像</span></span><br><span class="line"><span class="keyword">FROM</span> python:<span class="number">3.9</span></span><br><span class="line"><span class="comment">## 设置环境变量，相当于linux的export</span></span><br><span class="line"><span class="keyword">ENV</span> PATH /usr/local/bin:$PATH</span><br><span class="line"><span class="comment">## 在容器中进入根目录code（如果没有code目录则创建）相当于cd</span></span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /code</span></span><br><span class="line"><span class="comment">## 将执行docker build 路径下的所有文件copy到容器内所在的目录</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> requirements.txt .</span></span><br><span class="line"><span class="comment">## 执行shell命令</span></span><br><span class="line"><span class="keyword">RUN</span><span class="bash"> python3 -m pip install -U pip &amp;&amp; \</span></span><br><span class="line"><span class="bash">    python3 -m pip install -r requirements.txt -i https://pypi.tuna.tsinghua.edu.cn/simple/</span></span><br></pre>            </td>        </tr>    </table></figure><figure class="highlight sh">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment"># 构建</span></span><br><span class="line">docker build -t user/img_name:version .</span><br><span class="line"><span class="comment"># 发布</span></span><br><span class="line">docker push user/img_name:version</span><br></pre>            </td>        </tr>    </table></figure><figure class="highlight dockerfile">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment">#项目构建</span></span><br><span class="line"><span class="keyword">FROM</span> <span class="keyword">user</span>/img_name:version</span><br><span class="line"><span class="keyword">WORKDIR</span><span class="bash"> /app</span></span><br><span class="line"><span class="keyword">COPY</span><span class="bash"> . .</span></span><br><span class="line"><span class="keyword">CMD</span><span class="bash"> [<span class="string">"supervisord"</span>,<span class="string">"-c"</span>, <span class="string">"supervisord.conf"</span>]</span></span><br></pre>            </td>        </tr>    </table></figure><h4 id="golang"><a href="#golang" class="headerlink" title="golang"></a>golang</h4><p>两层： 1.依赖构建 2.编译与项目构建</p><p>三层： 1. 依赖构建 2.编译构建 3. 运行文件构建</p><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre>            </td>            <td class="code">                <pre><span class="line">FROM golang:1.16 as builder</span><br><span class="line"><span class="comment"># Setting environment variables</span></span><br><span class="line">ENV GOPROXY=<span class="string">"https://goproxy.cn,direct"</span> GO111MODULE=<span class="string">"on"</span> CGO_ENABLED=<span class="string">"0"</span> GOOS=<span class="string">"linux"</span> GOARCH=<span class="string">"amd64"</span></span><br><span class="line"><span class="comment">## add rely</span></span><br><span class="line">go mod tidy </span><br><span class="line"><span class="comment"># Switch to workspace</span></span><br><span class="line">WORKDIR /go/src/github.com/gowebspider/goproxies/</span><br><span class="line"><span class="comment"># Load file</span></span><br><span class="line">COPY . .</span><br><span class="line"><span class="comment"># Build and place the results in /tmp/goproxies</span></span><br><span class="line">RUN go build -o /tmp/goproxies .</span><br><span class="line"></span><br><span class="line">FROM alpine:latest</span><br><span class="line">WORKDIR /root/</span><br><span class="line">COPY --from=builder /tmp/goproxies .</span><br><span class="line">CMD [<span class="string">"./goproxies"</span>]</span><br></pre>            </td>        </tr>    </table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;引子&quot;&gt;&lt;a href=&quot;#引子&quot; class=&quot;headerlink&quot; title=&quot;引子&quot;&gt;&lt;/a&gt;引子&lt;/h2&gt;
&lt;p&gt;​ 在构建、部署、测试等情景中下不知你也是否遇到过这么几个问题，构建慢、依赖安装慢、重复性构建。以至于每一次采用docker来构建时，都需
      
    
    </summary>
    
    
      <category term="容器编排" scheme="https://paynewu.com/categories/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/"/>
    
    
      <category term="docker" scheme="https://paynewu.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>cni already has an IP address different from ...</title>
    <link href="https://paynewu.com/4032605777.html"/>
    <id>https://paynewu.com/4032605777.html</id>
    <published>2021-08-30T15:20:51.000Z</published>
    <updated>2021-08-30T15:34:37.398Z</updated>
    
    <content type="html"><![CDATA[<h2 id="错误如下"><a href="#错误如下" class="headerlink" title="错误如下"></a>错误如下</h2><p>cni already has an IP address different from …</p><p>如图所示</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtz8c50ce1j627w0mex5w02.jpg" alt="1421630332579_.pic_hd"></p><h2 id="缘由"><a href="#缘由" class="headerlink" title="缘由"></a>缘由</h2><p>node之前反复添加</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment"># 找到对应的节点</span></span><br><span class="line">kubectl get pod --all-namespace -o wide</span><br></pre>            </td>        </tr>    </table></figure><p>在对应node上执行如下命令</p><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment"># 重置Kubernetes集群</span></span><br><span class="line">kubeadm reset &amp;&amp; systemctl stop kubelet &amp;&amp; systemctl stop docker</span><br><span class="line"><span class="comment"># 删除残留</span></span><br><span class="line">rm -rf /var/lib/cni/ &amp;&amp; rm -rf /var/lib/kubelet/* &amp;&amp; rm -rf /etc/cni/</span><br><span class="line"><span class="comment"># 删除旧网络</span></span><br><span class="line">ifconfig cni0 down &amp;&amp; ifconfig flannel.1 down &amp;&amp; ifconfig docker0 down </span><br><span class="line">ip link delete cni0 &amp;&amp; ip link delete flannel.1</span><br><span class="line"><span class="comment"># 重启服务</span></span><br><span class="line">systemctl restart docker &amp;&amp; systemctl start kubelet</span><br></pre>            </td>        </tr>    </table></figure><p>在master上获取join token</p><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">kubeadm token create --<span class="built_in">print</span>-join-command</span><br></pre>            </td>        </tr>    </table></figure><p>重新加入节点</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://www.cnblogs.com/wangxu01/articles/11803547.html" target="_blank" rel="noopener">https://www.cnblogs.com/wangxu01/articles/11803547.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;错误如下&quot;&gt;&lt;a href=&quot;#错误如下&quot; class=&quot;headerlink&quot; title=&quot;错误如下&quot;&gt;&lt;/a&gt;错误如下&lt;/h2&gt;
&lt;p&gt;cni already has an IP address different from …&lt;/p&gt;
&lt;p&gt;如图所示&lt;/p
      
    
    </summary>
    
    
      <category term="Error Set" scheme="https://paynewu.com/categories/Error-Set/"/>
    
      <category term="错误集合" scheme="https://paynewu.com/categories/Error-Set/%E9%94%99%E8%AF%AF%E9%9B%86%E5%90%88/"/>
    
      <category term="Kubernetes" scheme="https://paynewu.com/categories/Error-Set/%E9%94%99%E8%AF%AF%E9%9B%86%E5%90%88/Kubernetes/"/>
    
    
      <category term="Kubernetes" scheme="https://paynewu.com/tags/Kubernetes/"/>
    
      <category term="错误集合" scheme="https://paynewu.com/tags/%E9%94%99%E8%AF%AF%E9%9B%86%E5%90%88/"/>
    
      <category term="Error Set" scheme="https://paynewu.com/tags/Error-Set/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes搭建dashboard</title>
    <link href="https://paynewu.com/1529878275.html"/>
    <id>https://paynewu.com/1529878275.html</id>
    <published>2021-08-30T11:38:42.000Z</published>
    <updated>2021-08-30T14:54:33.383Z</updated>
    
    <content type="html"><![CDATA[<p>当部署完Kubernetes集群之后，为了便于管理Web UI或许是一种新型且快捷的部署方式。本节将以部署工具helm搭建Kubernetes Dashboard。以及拍坑</p><p>helm相关文档：</p><ul>    <li><a href="https://helm.sh/zh/docs/" target="_blank" rel="noopener">helm</a></li>    <li><a href="https://www.cncf.io/reports/cncf-helm-project-journey-report/" target="_blank" rel="noopener">CNCF Helm 项目过程报告</a></li></ul><h2 id="helm初始化"><a href="#helm初始化" class="headerlink" title="helm初始化"></a>helm初始化</h2><p>在这里推荐使用Kubernetes dashboard官方的仓库。在helm初始化完成后可使用如下命令进行helm repo初始化</p><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment"># add repo</span></span><br><span class="line">helm repo add kubernetes-dashboardhttps://kubernetes.github.io/dashboard/</span><br></pre>            </td>        </tr>    </table></figure><p>为避免加入的repo非最新，可使用如下命令进行更新</p><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">helm repo update</span><br></pre>            </td>        </tr>    </table></figure><p>效果如下所示</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtz2xowgsrj61di0880wn02.jpg" alt="image-20210830201834557"></p><h3 id="helm安装Kubernetes-dashboard"><a href="#helm安装Kubernetes-dashboard" class="headerlink" title="helm安装Kubernetes dashboard"></a>helm安装Kubernetes dashboard</h3><p>笔者建议使用新的namespace</p><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment"># create namespace</span></span><br><span class="line">Kubernetes create ns monitor</span><br><span class="line"><span class="comment"># helm install kubernetes dashboard</span></span><br><span class="line">helm install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard -n monitor</span><br></pre>            </td>        </tr>    </table></figure><p>输出如下所示</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtz47x30vvj627u0k2aj602.jpg" alt="image-20210830210303410"></p><p>等待部署完成，查看如下图所示</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtz67m63w5j60yc08sdi602.jpg" alt="image-20210830221157231"></p><h4 id="修改端口暴露类型"><a href="#修改端口暴露类型" class="headerlink" title="修改端口暴露类型"></a>修改端口暴露类型</h4><figure class="highlight routeros">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">kubectl <span class="builtin-name">edit</span> -n monitor<span class="built_in"> service </span>kubernetes-dashboard</span><br></pre>            </td>        </tr>    </table></figure><p>将type：ClusterIP修改为NodePort类型暴露端口，如下所示</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtz6dpjcmjj60v20r844s02.jpg" alt="image-20210830221749368"></p><p>修改完成后，就可以获得暴露的端口啦，如下</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtz6cvz8lmj610809iacr02.jpg" alt="image-20210830221701538"></p><blockquote>    <p>若在云服务器上请开启对应端口，笔者这里为32623</p></blockquote><p>此时访问服务器ip+端口，即可进入登陆页面。如下图所示</p><blockquote>    <ol>        <li>            <p>必须为<a href="https://ip:port">https://ip:port</a></p>        </li>        <li>            <p>建议使用火狐浏览器</p>        </li>    </ol></blockquote><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtz6inwfgxj624m0mqq6802.jpg" alt="image-20210830222235151"></p><p>至此部署部分已经完成</p><h2 id="获取token与授权访问"><a href="#获取token与授权访问" class="headerlink" title="获取token与授权访问"></a>获取token与授权访问</h2><h3 id="获取token"><a href="#获取token" class="headerlink" title="获取token"></a>获取token</h3><figure class="highlight smali">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment"># 查看token名称</span></span><br><span class="line">kubectl get secrets -n<span class="built_in"> monitor </span>| grep kubernetes-dashboard-token</span><br><span class="line"><span class="comment"># 查看token详情</span></span><br><span class="line">kubectl describe secrets -n<span class="built_in"> monitor </span>| grep kubernetes-dashboard-token-你自己的后缀名</span><br></pre>            </td>        </tr>    </table></figure><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtz6lrrzogj611001o74u02.jpg" alt="image-20210830222534534"></p><h3 id="授权"><a href="#授权" class="headerlink" title="授权"></a>授权</h3><p>此时我们刚进去界面，发现什么资源都显示不了，是因为dashboard默认的<code>serviceaccount</code>并没有权限，所以我们需要给予它授权。</p><blockquote>    <p><strong>注意</strong>：这里直接赋予的是超级管理员权限，如果需要更加细颗粒度的授权，请参照官方的说明</p>    <p><a href="https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/README.md" target="_blank" rel="noopener">https://github.com/kubernetes/dashboard/blob/master/docs/user/access-control/README.md</a></p></blockquote><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtz6nfrdq3j62060oktgn02.jpg" alt="image-20210830222709899"></p><figure class="highlight yaml">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">monitor</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">cluster-admin</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes-dashboard</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">monitor</span></span><br></pre>            </td>        </tr>    </table></figure><p>将以上的yaml文件copy到master服务器上创建即可,当然若您也是使用的monitor 的namespace可直接使用如下命令</p><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/KubernetersDeployExample/script/main/dashboard/authorization.yaml</span><br></pre>            </td>        </tr>    </table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当部署完Kubernetes集群之后，为了便于管理Web UI或许是一种新型且快捷的部署方式。本节将以部署工具helm搭建Kubernetes Dashboard。以及拍坑&lt;/p&gt;
&lt;p&gt;helm相关文档：&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;a href=&quot;https:/
      
    
    </summary>
    
    
      <category term="Kubernetes" scheme="https://paynewu.com/categories/Kubernetes/"/>
    
      <category term="docker" scheme="https://paynewu.com/categories/Kubernetes/docker/"/>
    
    
      <category term="Kubernetes" scheme="https://paynewu.com/tags/Kubernetes/"/>
    
      <category term="docker" scheme="https://paynewu.com/tags/docker/"/>
    
      <category term="容器编排" scheme="https://paynewu.com/tags/%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92/"/>
    
      <category term="部署" scheme="https://paynewu.com/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的SQL使用之中</title>
    <link href="https://paynewu.com/1815382139.html"/>
    <id>https://paynewu.com/1815382139.html</id>
    <published>2021-08-26T06:53:02.000Z</published>
    <updated>2021-09-01T12:49:02.521Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DML的使用"><a href="#DML的使用" class="headerlink" title="DML的使用"></a>DML的使用</h2><p>对表中的数据行进行增、删、改</p><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><blockquote>    <p>向数据表内插入数据</p></blockquote><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># INSERT语法</span><br><span class="line">INSERT [INTO] table_name[(field_name_1, field_name_2...)] VALUES(value1, value2...),[(value1, value2...)...]</span><br><span class="line"># 常见示例</span><br><span class="line">## 插入</span><br><span class="line">INSERT INTO ch_people_msg(&#96;p_uic&#96;, &#96;p_nickname&#96;, &#96;p_gender&#96;, &#96;p_age&#96;, &#96;p_pnum&#96;, &#96;p_address&#96;, &#96;p_email&#96;) VALUES</span><br><span class="line">(&quot;431122200008868162&quot;, &quot;payne&quot;, &quot;m&quot;, 22, 17672655132, &quot;湖南省xx市xx区雨花a世界&quot;, &quot;127xxxx261&quot;),</span><br><span class="line">(&quot;431122200002148162&quot;, &quot;tom&quot;, &quot;m&quot;, 25, 17672655132, &quot;湖南省xx市xx区雨花a世界&quot;, &quot;127xxxx221&quot;),</span><br><span class="line">(&quot;431122200002168163&quot;, &quot;tom&quot;, &quot;m&quot;, 25, 17672655132, &quot;湖南省xx市xx区雨花a世界&quot;, &quot;127xxxx221&quot;)</span><br></pre>            </td>        </tr>    </table></figure><blockquote>    <figure class="highlight plain">        <table>            <tr>                <td class="gutter">                    <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre>                </td>                <td class="code">                    <pre><span class="line">CREATE TABLE IF NOT EXISTS &#96;ch_people_msg&#96; ( </span><br><span class="line">  &#96;p_id&#96;  SERIAL NOT NULL AUTO_INCREMENT COMMENT &#39;用户id&#39; , </span><br><span class="line">  &#96;p_uic&#96; CHAR(18) NOT NULL COMMENT &#39;用户身份证&#39;,</span><br><span class="line">  &#96;p_nickname&#96; VARCHAR(50) NOT NULL COMMENT &#39;用户昵称&#39;, </span><br><span class="line">  &#96;p_gender&#96; ENUM(&#39;m&#39;,&#39;f&#39;, &#39;n&#39;) NOT NULL DEFAULT &#39;n&#39; COMMENT &#39;用户性别&#39;, </span><br><span class="line">  &#96;p_age&#96; TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT &#39;用户年龄&#39;, </span><br><span class="line">  &#96;p_pnum&#96; CHAR(11) NOT NULL COMMENT &#39;用户电话&#39;, </span><br><span class="line">  &#96;p_address&#96; VARCHAR(100) NOT NULL COMMENT &#39;用户地址&#39;, </span><br><span class="line">  &#96;p_email&#96; VARCHAR(50) NOT NULL COMMENT &#39;用户邮箱&#39;, </span><br><span class="line">  &#96;p_add_time&#96; TIMESTAMP NOT NULL DEFAULT NOW() COMMENT &#39;统计用户时间&#39;,</span><br><span class="line">   PRIMARY KEY (&#96;p_id&#96;),</span><br><span class="line">   UNIQUE KEY &#96;p_uic&#96;(&#96;p_uic&#96;)</span><br><span class="line">) ENGINE &#x3D; InnoDB CHARSET&#x3D;utf8mb4 COLLATE utf8mb4_general_ci COMMENT &#x3D; &#39;中国成员信息表&#39;;</span><br></pre>                </td>            </tr>        </table>    </figure></blockquote><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><figure class="highlight pgsql">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> <span class="built_in">table_name</span></span><br><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> <span class="built_in">table_name</span>;</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">table</span> <span class="built_in">table_name</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">delete</span>: DML操作, 是逻辑性质删除,逐行进行删除,速度慢.</span><br><span class="line"><span class="keyword">truncate</span>: DDL操作,对与表段中的数据页进行清空,速度快.</span><br></pre>            </td>        </tr>    </table></figure><blockquote>    <p> 当表被TRUNCATE 后，这个表和索引所占用的空间会恢复到初始大小，</p>    <p> DELETE操作不会减少表或索引所占用的空间。</p>    <p> drop语句将表所占用的空间全释放掉。</p>    <p>释放空间与速度：drop &gt; truncate &gt; delete</p></blockquote><p><strong>delete</strong></p><ul>    <li>delete是DML，执行delete操作时，每次从表中删除一行，并且同时将该行的的删除操作记录在redo和undo表空间中以便进行回滚（rollback）和重做操作，但要注意表空间要足够大，需要手动提交（commit）操作才能生效，可以通过rollback撤消操作。</li>    <li>        <p>delete可根据条件删除表中满足条件的数据，如果不指定where子句，那么删除表中所有记录。</p>    </li>    <li>        <p>delete语句不影响表所占用的extent，高水线(high watermark)保持原位置不变。</p>    </li></ul><p><strong>truncate</strong></p><ul>    <li>truncate是DDL，会隐式提交，所以，不能回滚，不会触发触发器。</li>    <li>        <p>truncate会删除表中所有记录，并且将重新设置高水线和所有的索引，缺省情况下将空间释放到minextents个extent，除非使用reuse storage，。不会记录日志，所以执行速度很快，但不能通过rollback撤消操作（如果一不小心把一个表truncate掉，也是可以恢复的，只是不能通过rollback来恢复）。</p>    </li>    <li>        <p>对于外键（foreignkey ）约束引用的表，不能使用 truncate table，而应使用不带 where 子句的 delete 语句。</p>    </li>    <li>        <p>truncatetable不能用于参与了索引视图的表。</p>    </li></ul><p><strong>drop</strong></p><ul>    <li>drop是DDL，会隐式提交，所以，不能回滚，不会触发触发器。</li>    <li>        <p>drop语句删除表结构及所有数据，并将表所占用的空间全部释放。</p>    </li>    <li>        <p>drop语句将删除表的结构所依赖的约束，触发器，索引，依赖于该表的存储过程/函数将保留,但是变为invalid状态。</p>    </li></ul><blockquote>    <ul>        <li>            <p>如果想删除表，当然用drop； </p>        </li>        <li>            <p>如果想保留表而将所有数据删除，如果和事务无关，用truncate即可；</p>        </li>        <li>            <p>如果和事务有关，或者想触发trigger，还是用delete；</p>        </li>        <li>            <p>如果是整理表内部的碎片，可以用truncate跟上reuse stroage，再重新导入/插入数据。</p>        </li>    </ul></blockquote><p>伪删除：用update来替代delete，最终保证业务中查不到（select）即可</p><figure class="highlight sql">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre>            </td>            <td class="code">                <pre><span class="line">1.添加状态列</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> ch_people_msg <span class="keyword">ADD</span> state <span class="built_in">TINYINT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">1</span> ;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> ch_people_msg;</span><br><span class="line">2. <span class="keyword">UPDATE</span> 替代 <span class="keyword">DELETE</span></span><br><span class="line"><span class="keyword">UPDATE</span> ch_people_msg <span class="keyword">SET</span> state=<span class="number">0</span> <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">6</span>;</span><br><span class="line">3. 业务语句查询</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> ch_people_msg <span class="keyword">WHERE</span> state=<span class="number">1</span>;</span><br></pre>            </td>        </tr>    </table></figure><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><figure class="highlight routeros">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">UPDATE ch_people_msg <span class="builtin-name">SET</span> <span class="attribute">p_nickname</span>=<span class="string">'zero'</span> WHERE <span class="attribute">id</span>=2;</span><br></pre>            </td>        </tr>    </table></figure><h3 id="查"><a href="#查" class="headerlink" title="查"></a>查</h3><figure class="highlight dart">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 基本语法</span><br><span class="line">select--from--[where]--[group by]--[having]--[order by]</span><br></pre>            </td>        </tr>    </table></figure><blockquote>    <p>FROM：对FROM子句中的前两个表执行笛卡尔积（Cartesian product)(交叉联接），生成虚拟表VT1 ON：对VT1应用ON筛选器。只有那些使<join_condition>为真的行才被插入VT2<br>OUTER(JOIN)：如果指定了OUTER JOIN（相对于CROSS JOIN 或(INNER JOIN),保留表（preserved table：左外部联接把左表标记为保留表，右外部联接把右表标记为保留表，完全外部联接把两个表都标记为保留表）中未找到匹配的行将作为外部行添加到 VT2,生成VT3.如果FROM子句包含两个以上的表，则对上一个联接生成的结果表和下一个表重复执行步骤1到步骤3，直到处理完所有的表为止。<br>WHERE：对VT3应用WHERE筛选器。只有使<where_condition>为true的行才被插入VT4.<br>GROUP BY：按GROUP BY子句中的列列表对VT4中的行分组，生成VT5.<br>CUBE|ROLLUP：把超组(Suppergroups)插入VT5,生成VT6.<br>HAVING：对VT6应用HAVING筛选器。只有使<having_condition>为true的组才会被插入VT7.<br>SELECT：处理SELECT列表，产生VT8.<br>DISTINCT：将重复的行从VT8中移除，产生VT9.<br>ORDER BY：将VT9中的行按ORDER BY 子句中的列列表排序，生成游标（VC10).<br>TOP：从VC10的开始处选择指定数量或比例的行，生成表VT11,并返回调用者。</p></blockquote><figure class="highlight dart">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 单表子句-from</span><br><span class="line">SELECT 列<span class="number">1</span>,列<span class="number">2</span> FROM 表</span><br><span class="line">SELECT  *  FROM 表</span><br></pre>            </td>        </tr>    </table></figure><h4 id="where"><a href="#where" class="headerlink" title="where"></a>where</h4><figure class="highlight dart">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># 等值查询</span><br><span class="line">SELECT  *  FROM 表 where 列 = 值</span><br><span class="line">SELECT 列<span class="number">1</span>,列<span class="number">2</span> FROM 表 where 列 = 值</span><br><span class="line">  </span><br><span class="line"># 比较运算符</span><br><span class="line">&gt;、&lt;、&gt;=、&lt;=、!=、=</span><br><span class="line">SELECT * FROM 表 where 列 &gt;= 值</span><br><span class="line">SELECT 列,... FROM 表 where 列 &lt;= 值</span><br><span class="line">  </span><br><span class="line"># 模糊查询</span><br><span class="line">%代表任何个数的任何字符 _:它代表一个任何字符</span><br><span class="line">注意：%不能放在前面,因为不走索引,要找%或_,转义就行了\%和\_</span><br><span class="line">  </span><br><span class="line"># or、and</span><br><span class="line">  SELECT * FROM 表 where 列 &gt;= 值 or 列 &lt; 值</span><br><span class="line">  </span><br><span class="line"># where配合<span class="keyword">in</span>语句</span><br><span class="line">  SELECT * FROM 表 WHERE 列 IN (VALUES, VALUES);</span><br><span class="line"></span><br><span class="line"># where配合between and</span><br><span class="line">  SELECT * FROM city  WHERE population &gt;<span class="number">1000000</span> AND population &lt;<span class="number">2000000</span>;</span><br><span class="line">SELECT * FROM city  WHERE population BETWEEN <span class="number">1000000</span> AND <span class="number">2000000</span>;</span><br></pre>            </td>        </tr>    </table></figure><h4 id="group-by"><a href="#group-by" class="headerlink" title="group by"></a>group by</h4><p>根据 by后面的条件进行<strong>分组</strong>，方便统计，by后面跟一个列或多个列</p><blockquote>    <p><strong>max()</strong> ：最大值<br><strong>min()</strong> ：最小值<br><strong>avg()</strong> ：平均值<br><strong>sum()</strong> ：总和<br><strong>count()</strong> ：个数<br><strong>group_concat()</strong> : 列转行</p></blockquote><p><strong>having</strong></p><p>​ having语句是分组后过滤的条件，在group by之后使用，也就是如果要用having语句，必须要先有group by语句。</p><h4 id="order-by"><a href="#order-by" class="headerlink" title="order by"></a>order by</h4><p>实现先排序，by后添加条件列</p><figure class="highlight sql">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment"># distinct：去重复查询</span></span><br><span class="line"><span class="keyword">SELECT</span> 列 <span class="keyword">FROM</span> ;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span>(列) <span class="keyword">FROM</span> city  ;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 联合查询- union all</span></span><br><span class="line">  <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> city </span><br><span class="line"><span class="keyword">WHERE</span> countrycode <span class="keyword">IN</span> (<span class="string">'CHN'</span> ,<span class="string">'USA'</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> city <span class="keyword">WHERE</span> countrycode=<span class="string">'CHN'</span></span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> city <span class="keyword">WHERE</span> countrycode=<span class="string">'USA'</span></span><br><span class="line"></span><br><span class="line">说明:一般情况下,我们会将 <span class="keyword">IN</span> 或者 <span class="keyword">OR</span> 语句 改写成 <span class="keyword">UNION</span> <span class="keyword">ALL</span>,来提高性能</span><br><span class="line"><span class="keyword">UNION</span>     去重复</span><br><span class="line"><span class="keyword">UNION</span> <span class="keyword">ALL</span> 不去重复</span><br></pre>            </td>        </tr>    </table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;DML的使用&quot;&gt;&lt;a href=&quot;#DML的使用&quot; class=&quot;headerlink&quot; title=&quot;DML的使用&quot;&gt;&lt;/a&gt;DML的使用&lt;/h2&gt;
&lt;p&gt;对表中的数据行进行增、删、改&lt;/p&gt;
&lt;h3 id=&quot;增&quot;&gt;&lt;a href=&quot;#增&quot; class=&quot;hea
      
    
    </summary>
    
    
      <category term="数据库" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://paynewu.com/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://paynewu.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>优雅的从服务器上传下载文件</title>
    <link href="https://paynewu.com/1195400737.html"/>
    <id>https://paynewu.com/1195400737.html</id>
    <published>2021-08-25T02:59:37.000Z</published>
    <updated>2021-08-25T13:19:57.831Z</updated>
    
    <content type="html"><![CDATA[<p><strong>如何优雅的从Linux服务器上进行文件“上传”与“下载”</strong></p><p>不知你是否也遇到以下几种情形：</p><ul>    <li>本地电脑上传文件至Linux服务器</li>    <li>Linux服务器之间文件传递</li></ul><p>那么如何有效、且优雅的的进行呢。特意为了此下载xshell、finalshell等软件？其实也大可不必，隐患太多也并不方便。只需要学会使用Linux中scp命令即可</p><h2 id="scp"><a href="#scp" class="headerlink" title="scp"></a>scp</h2><p>scp在网络上的主机之间复制文件。它使用ssh进行数据传输，并使用与ssh相同的身份验证和提供相同的安全性。scp如果身份验证需要密码或密码短语，则会询问密码或密码。</p><p>scp 是加密的，rcp 是不加密的，scp 是 rcp 的加强版。</p><blockquote>    <p>文件名可能包含用户和主机规范，以指示将文件复制到该主机或从该主机复制文件。本地文件名可以使用绝对或相对路径名</p></blockquote><h3 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h3><figure class="highlight shell">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="meta">#</span><span class="bash"> 下载</span></span><br><span class="line">scp [options] remote_ip:remote_folder(remote_file) local_folder(local_file)</span><br><span class="line">scp [options] remote_user@remote_ip:remote_folder(remote_file) local_folder(local_file)</span><br><span class="line"><span class="meta">#</span><span class="bash"> 上传</span></span><br><span class="line">scp [options] local_folder(local_file) remote_ip:remote_folder(remote_file)</span><br><span class="line">scp [options] local_folder(local_file) remote_user@remote_ip:remote_folder(remote_file)</span><br></pre>            </td>        </tr>    </table></figure><p><strong>记忆</strong></p><blockquote>    <p>remote_ip 在前即下载，在后即上传</p></blockquote><h3 id="进阶使用"><a href="#进阶使用" class="headerlink" title="进阶使用"></a>进阶使用</h3><ul>    <li>-1： 强制scp命令使用协议ssh1</li>    <li>-2： 强制scp命令使用协议ssh2</li>    <li>-4： 强制scp命令只使用IPv4寻址</li>    <li>-6： 强制scp命令只使用IPv6寻址</li>    <li>-B： 使用批处理模式（传输过程中不询问传输口令或短语）</li>    <li>-C： 允许压缩（将-C标志传递给ssh，从而打开压缩功能）</li>    <li>-q： 不显示传输进度条。</li>    <li>-r： 递归复制整个目录。</li>    <li>-v：详细方式显示输出。scp和ssh(1)会显示出整个过程的调试信息。这些信息用于调试连接，验证和配置问题。</li>    <li>-c cipher： 以cipher将数据传输进行加密，这个选项将直接传递给ssh。</li>    <li>-F ssh_config： 指定一个替代的ssh配置文件，此参数直接传递给ssh。</li>    <li>-i identity_file： 从指定文件中读取传输时使用的密钥文件，此参数直接传递给ssh。</li>    <li>-l limit： 限定用户所能使用的带宽，以Kbit/s为单位。</li>    <li>-o ssh_option： 如果习惯于使用ssh_config中的参数传递方式，</li>    <li>-P port：注意是大写的P, port是指定数据传输用到的端口号</li>    <li>-S program： 指定加密传输时所使用的程序。此程序必须能够理解ssh(1)的选项。</li></ul><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>使用scp命令要确保使用的用户具有可读取远程服务器相应文件的权限，否则scp命令是无法起作用的。</p><p>如果远程服务器防火墙有为scp命令设置了指定的端口，我们需要使用 -P 参数来设置命令的端口号，命令格式如下：</p><figure class="highlight shell">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="meta">#</span><span class="bash"> scp 命令使用端口号 4526</span></span><br><span class="line">scp -P 4526 remote@s2:/usr/local/checkNetwokr.sh ~/</span><br></pre>            </td>        </tr>    </table></figure><h2 id="实例脚本"><a href="#实例脚本" class="headerlink" title="实例脚本"></a>实例脚本</h2><p>使用scp实现文件(夹)分发上传到服务器</p><figure class="highlight shell">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="meta">#</span><span class="bash">!/usr/bin/env bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 远程地址列表 remote hosts List</span></span></span><br><span class="line">rhs_list=(s1 s2)</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 本地文件路径</span></span></span><br><span class="line">local_file=~/c.txt</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 目的文件路径</span></span></span><br><span class="line">target_path=~/</span><br><span class="line"></span><br><span class="line">for host in $&#123;rhs_list[@]&#125;; do</span><br><span class="line">scp -C $&#123;local_file&#125; root@$&#123;host&#125;:~/</span><br><span class="line">done</span><br></pre>            </td>        </tr>    </table></figure><blockquote>    <p>反之也可下载</p></blockquote><h2 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h2><p>配合ssh免密登陆与host解析scp更加丝滑哦</p><p>具体可参考基于ssh-key实现服务器免密登陆</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;如何优雅的从Linux服务器上进行文件“上传”与“下载”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;不知你是否也遇到以下几种情形：&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;本地电脑上传文件至Linux服务器&lt;/li&gt;
    &lt;li&gt;Linux服务器之间文件传递&lt;/li&gt;

      
    
    </summary>
    
    
      <category term="ssh" scheme="https://paynewu.com/categories/ssh/"/>
    
      <category term="Linux" scheme="https://paynewu.com/categories/ssh/Linux/"/>
    
      <category term="服务器" scheme="https://paynewu.com/categories/ssh/Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="文件传输" scheme="https://paynewu.com/categories/ssh/Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/"/>
    
      <category term="scp" scheme="https://paynewu.com/categories/ssh/Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/scp/"/>
    
    
      <category term="ssh" scheme="https://paynewu.com/tags/ssh/"/>
    
      <category term="Linux" scheme="https://paynewu.com/tags/Linux/"/>
    
      <category term="服务器" scheme="https://paynewu.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="文件传输" scheme="https://paynewu.com/tags/%E6%96%87%E4%BB%B6%E4%BC%A0%E8%BE%93/"/>
    
      <category term="scp" scheme="https://paynewu.com/tags/scp/"/>
    
  </entry>
  
  <entry>
    <title>如何做好自我介绍</title>
    <link href="https://paynewu.com/2241892771.html"/>
    <id>https://paynewu.com/2241892771.html</id>
    <published>2021-08-24T18:27:34.000Z</published>
    <updated>2021-08-24T19:18:58.730Z</updated>
    
    <content type="html"><![CDATA[<h2 id="自我介绍"><a href="#自我介绍" class="headerlink" title="自我介绍"></a>自我介绍</h2><p>​ 介，古代传递宾主之言的人。绍，绍继、接续。介绍指相继传话；为人引进或带入新的事物。自我介绍是向别人展示你，认识你。</p><p>​ 自我介绍好不好，重要性不言而喻其直接关系到你给别人的第一印象的好坏及以后交往的顺利与否。同时，也是认识自我的手段。</p><h3 id="如何做好自我介绍"><a href="#如何做好自我介绍" class="headerlink" title="如何做好自我介绍"></a>如何做好自我介绍</h3><p>自我介绍一是为了更好的破冰，让别人记住你、了解你等，那么如何做自我介绍自然也从这几点切入。</p><h3 id="自嘲式"><a href="#自嘲式" class="headerlink" title="自嘲式"></a>自嘲式</h3><blockquote>    <p>适用场景：演讲</p>    <p>关键词：破冰</p></blockquote><p>有趣的自嘲可以快速吸引注意力，让人对你记忆犹新。</p><p>例如：你（大家）好，我叫xxx。原本想做一名x x x,可能是xxx不太好。所以目前做了xxx</p><h3 id="八卦式"><a href="#八卦式" class="headerlink" title="八卦式"></a>八卦式</h3><blockquote>    <p>适用场景：非正式场合</p>    <p>关键词：好奇</p></blockquote><p>在远古社会，智人凭借八卦，使整个群体更趋于稳定和学会更多的协作，而协作就是智人强大起来的秘诀，但是为什么八卦可以使一个族群稳定和协作呢?因为信任，因为八卦这种社交行为可以让智人相互信任，而信任的基础就是相互了解，八卦就是智人相互了解的过程。 ——《人类简史》</p><p>例如：大家好，我叫xxx，来自xxx，（合理热点）结果xxx。我xxx</p><h3 id="自荐式"><a href="#自荐式" class="headerlink" title="自荐式"></a>自荐式</h3><blockquote>    <p>适用场景：商务场合、聚会，面试</p>    <p>关键词：自我推荐</p></blockquote><p>我是xxx，他人最需要自我价值面。</p><blockquote>    <p>切记避免<strong>多次</strong>,尽量全面</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;自我介绍&quot;&gt;&lt;a href=&quot;#自我介绍&quot; class=&quot;headerlink&quot; title=&quot;自我介绍&quot;&gt;&lt;/a&gt;自我介绍&lt;/h2&gt;
&lt;p&gt;​ 介，古代传递宾主之言的人。绍，绍继、接续。介绍指相继传话；为人引进或带入新的事物。自我介绍是向别人展示你，认识你。&lt;/
      
    
    </summary>
    
    
      <category term="个人随笔" scheme="https://paynewu.com/categories/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E7%AC%94/"/>
    
      <category term="所思所想" scheme="https://paynewu.com/categories/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E7%AC%94/%E6%89%80%E6%80%9D%E6%89%80%E6%83%B3/"/>
    
    
      <category term="个人随笔" scheme="https://paynewu.com/tags/%E4%B8%AA%E4%BA%BA%E9%9A%8F%E7%AC%94/"/>
    
      <category term="所思所想" scheme="https://paynewu.com/tags/%E6%89%80%E6%80%9D%E6%89%80%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>反爬虫常见策略总结</title>
    <link href="https://paynewu.com/358032656.html"/>
    <id>https://paynewu.com/358032656.html</id>
    <published>2021-08-24T17:56:48.000Z</published>
    <updated>2021-08-26T01:45:17.125Z</updated>
    
    <content type="html"><![CDATA[<p>知己知彼，百战不殆 ——《孙子兵法》。</p><blockquote>    <p>本文仅总结鄙人所知的反爬虫方式，不涉猎任何具体的分析与绕过方案。</p></blockquote><h1 id="反爬虫"><a href="#反爬虫" class="headerlink" title="反爬虫"></a>反爬虫</h1><p>反爬虫，即应对爬虫进行反制的统称，<strong>主要区分“正常用户”与“机器人”的一种策略统称</strong>。</p><h2 id="认识反爬虫"><a href="#认识反爬虫" class="headerlink" title="认识反爬虫"></a>认识反爬虫</h2><p>​ 正所谓知其然，知其所以然。对于反爬虫的措施有所了解与认知，一方面便于快捷定位防护点实现分析或绕过，另一方面组成爬虫攻防体系。万变自不离其宗，应对反爬虫措施游刃有余。一般常在如下几大部分<strong>设伏</strong>。</p><blockquote>    <p> 以下便不考虑第三方测试工具的校验</p></blockquote><h3 id="请求前校验"><a href="#请求前校验" class="headerlink" title="请求前校验"></a>请求前校验</h3><h4 id="抓包拦截"><a href="#抓包拦截" class="headerlink" title="抓包拦截"></a><strong>抓包拦截</strong></h4><p>​ 做过爬虫的小伙伴，一定知道在分析加密、执行爬虫项目之前。首先第一步一定是先抓包，定位到对应数据包，然后继续才进行分析或规律。那么在此无疑是<strong>最为有效</strong>的反抓，捕获不到流量包URL未知，除了使用自动化测试工具、RPC等通常可能都毫无办法。</p><p>抓包拦截又可细分为控制台检测、端口转移、证书校验，私有协议总而言之就是让你抓不到包，其方法无所不用其极。</p><p>控制台检测抓包绕过策略：</p><ul>    <li>        <p>替代法: 采用<strong>中间人抓包</strong>（Charles、mitmproxy、firdler等）</p>    </li>    <li>        <p>分析绕过法：定位到检测处，分析绕过</p>    </li></ul><p>端口转移绕过策略：</p><ul>    <li>强制端口</li>    <li>流量转发</li></ul><p><strong>证书锁定与公钥锁定</strong></p><p>​ 为了防止中间人攻击，采用SSL-Pinning的技术来反抓包。 中间人抓包要点是伪造了一个假的证书实现拦截与转发，从而在中间获取的过路数据包实现抓包。<br>反抓思路就是，客户端也预置一份服务端的证书，比较一下就知道真假了。SSL-pinning有两种方式证书锁定（Certificate Pinning）与公钥锁定（Public Key Pinning）</p><p>证书锁定</p><blockquote>    <p>​ 证书锁定是SSL/TLS加密的额外保证手段。它会将服务器的证书公钥预先保存在客户端。在建立安全连接的过程中，客户端会将预置的公钥和接受的证书做比较。<br>如果一致，就建立连接，否则就拒绝连接。在客户端设置证书只允许设置指定域名的证书，而不接受操作系统或浏览器内置的CA根证书对应的任何证书。</p></blockquote><p>公钥锁定</p><blockquote>    <p> HTTP公钥锁定是HTTPS网站防止攻击者CA机构错误签发的证书进行中间人攻击的一种安全机制，用于预防CA遭受入侵或其他会造成CA签发未授权证书的情况。<br>采用公钥锁定时，网站会提供已授权公钥的哈希列表，指示客户端在后续通讯中只接受列表上的公钥。提取证书中的公钥并内置到客户端中，通过与服务器对比公钥值来验证连接的正确性。</p></blockquote><p>绕过：Hook到证书校验，无论如何返回正确的即可</p><p><strong>私有协议通讯</strong></p><p>一线大厂自定义通讯协议，自然考虑到了抓包。那么自然而然也设置了反抓包</p><p>绕过：Hook、沙箱</p><h4 id="运行环境检测"><a href="#运行环境检测" class="headerlink" title="运行环境检测"></a>运行环境检测</h4><p>CDN网络分发加验证:经典产品5秒盾</p><blockquote>    <p>其核心为 请求 -&gt; cdn -&gt; 返回关键参数 -&gt; 通过 -&gt; 数据(可能为假)</p></blockquote><h3 id="请求校验"><a href="#请求校验" class="headerlink" title="请求校验"></a>请求校验</h3><blockquote>    <p>当抓到包之后，便是模拟用户请求了。那么这里的常见的反抓措施有哪些呢</p></blockquote><p>请求校验，即在发送请求时即对网络请求时进行校验，实现区分。<strong>通过则返回数据，未通过不返回或返回假数据</strong>常有如下几种方式</p><h4 id="协议校验"><a href="#协议校验" class="headerlink" title="协议校验"></a><strong>协议校验</strong></h4><p>常见通用的协议有HTTP1.0、 HTTP1.1、HTTP2.0 ，若强行只允许HTTP2.0协议来完成请求与响应。那么平常使用其他</p><h4 id="TSL指纹"><a href="#TSL指纹" class="headerlink" title="TSL指纹"></a><strong>TSL指纹</strong></h4><p>每个请求库其实是有自己的库指纹，若只允许某段或某规则指纹通过，那么自然而言实现了反抓的效果。</p><h4 id="header校验"><a href="#header校验" class="headerlink" title="header校验"></a>header校验</h4><p>header校验又可分为两种。其一是字段校验，其二是header字段顺序校验</p><p>header各字段校验，如ua、sign、cookie、token、safe等</p><blockquote>    <p>绕过方案或思想：<br>通过JS解密或逆向获取关键参数缺啥补啥，完成模拟即可</p></blockquote><p>header字段顺序：当我们打开一个网页其实是一个新的会话那么在未断开或重新连接的时候那么这个顺序就是固定的。而字典格式中位置其实是随机分配的，自定义客户端刷新，对header取指纹或字段顺序检测即可实现鉴别</p><blockquote>    <p>绕过方案或思想：保持会话一致</p></blockquote><h4 id="参数校验"><a href="#参数校验" class="headerlink" title="参数校验"></a>参数校验</h4><p>通常字段不仅在header中校验还经常在请求参数中，如sgin、token、safe等。</p><blockquote>    <p>参数不可无缘无故来，主要来源JS 生成、服务器下发(不限于文件、JS、wasm等)。又可进行多次中间操作</p></blockquote><h4 id="前后端分离技术Ajax"><a href="#前后端分离技术Ajax" class="headerlink" title="前后端分离技术Ajax"></a>前后端分离技术Ajax</h4><blockquote>    <p>严格来说并不算反扒而是前后端分离技术,但常常结合反抓共同出现</p></blockquote><p>Ajax（异步JavaScript和XML）也叫不刷新页面请求。</p><h4 id="RPC防护"><a href="#RPC防护" class="headerlink" title="RPC防护"></a>RPC防护</h4><p>采用RPC及加密或编码方式实现前后端分离、微服务架构等。</p><blockquote>    <p>rpc结合反抓基本步骤，客户端请求(中间极有可能涉猎加密)RPC服务端，RPC客户端(原服务端)再次(中间极有可能涉猎加密)请求(一次或多次)。实现“分端”请求，多端加密。</p>    <p>逆写rpc进行调用，模拟“第一次”客户端请求rpc无差别，绕过</p></blockquote><h4 id="请求校验小结"><a href="#请求校验小结" class="headerlink" title="请求校验小结"></a>请求校验小结</h4><p>通常设置参数有两种情况，</p><ol>    <li>二次或多次请求：<ol>            <li>RPC：客户端请求，服务端使用RPC等再请求。</li>            <li>AJax</li>        </ol>    </li>    <li>JS设置关键参数（<strong>含二次刷新删除源文件跳转页面</strong>）</li></ol><h2 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h2><ul>    <li>识别点选或输入型</li>    <li>滑轨、滑块型</li>    <li>计算型</li>    <li>空值补齐型</li>    <li>空间推理型</li>    <li>短信或语音验证型</li></ul><h2 id="风控"><a href="#风控" class="headerlink" title="风控"></a>风控</h2><p>范围极大极广，简而言之，用户行为、运行环境等是否<strong>合理</strong>。从而实现区分</p><p>IP封禁</p><p>代码运行环境检测</p><p>等</p><h3 id="数据保护"><a href="#数据保护" class="headerlink" title="数据保护"></a>数据保护</h3><p>在不改变原有展示的情况下实现<strong>“隐藏”</strong></p><p>通常数据保护有以下种方式：</p><ol>    <li>动态字体</li>    <li>CSS偏移</li>    <li>内容加密映射</li>    <li>SVG映射等</li>    <li>内容图片化</li></ol><h2 id="代码防护"><a href="#代码防护" class="headerlink" title="代码防护"></a>代码防护</h2><h3 id="JS代码混淆"><a href="#JS代码混淆" class="headerlink" title="JS代码混淆"></a>JS代码混淆</h3><p>在遇见需要逆向的参数时候，往往不像表面一个参数那般平静。一查看各种混淆、防护又来了。怎么办怎么办，肝啊！当然也可以使用渲染工具模拟，此方案在此便不在过多赘述。</p><p>代码混淆是增加分析难度而牺牲部分性能的一种方案，此方案大部分是体现在通过逻辑转换换等方式将代码转化为难以分析的代码。难以分析是混淆的目的，等价转换是需要确保混淆前后的代码需不影响运行的功能。对于混淆可以又分为如下四种：布局混淆、数据混淆、控制混淆、预防混淆</p><p><strong>布局混淆</strong></p><p>布局混淆指在源代码中删除原有无用代码，处理常量名、变量名函数名等标识符，增加对于代码的阅读与分析。</p><p>无用代码：注释、调试信息、缩进、换行、无用函数与数据等</p><p>处理常量名、变量名函数名等标识符：</p><ul>    <li>标识重命名：将原有代码重命名为无具体意义的字符，例如 将name 重命名为a</li></ul><blockquote>    <p> 注意点：作用域内标识符碰撞情况</p></blockquote><p><strong>小结</strong>：布局混淆并不会影响执行的过程、内存开销，甚至代码体积反而减少了。</p><p><strong>数据混淆</strong></p><p>JS拥有常见的7种数据类型，number、string、boolean、unfined、null、Object</p><p><strong>数字混淆</strong></p><p>数据混淆有常见：进制转换、数字分治、其他</p><ul>    <li>        <p>进制转换：将十进制转化为二进制、八进制、十六进制等，从而达到“混淆”的目的</p>    </li>    <li>        <p><strong>数学分治</strong>：简而言之就是将数拆开，例如 2 = 1 + 1，也等于2 - 1 - 1 + 2再辅以数学公式等</p>    </li>    <li>        <p>其他：重新赋值等</p>    </li></ul><p><strong>字符串混淆</strong></p><p>字符串混淆常见的有编码转换编译、加密。常见的有hash、base64、md5等</p><p><strong>boolean</strong></p><p>我们都知道Boolean值为True、False。根据对boolean的处理，变成难以显示阅读的代码。</p><figure class="highlight erlang-repl">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre>            </td>            <td class="code">                <pre><span class="line">!<span class="number">0</span>,!<span class="number">1</span></span><br><span class="line">![], !![]</span><br><span class="line">!&#123;&#125;,!!&#123;&#125;</span><br><span class="line">!NaN,!!NaN</span><br><span class="line">!<span class="string">""</span>, !!<span class="string">""</span></span><br><span class="line">!undefined, !!undefined</span><br><span class="line">!null, !!null</span><br><span class="line">!Object, !!Object</span><br><span class="line">!void(<span class="number">0</span>),!!void(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">|,||, &amp;, &amp;&amp;, Boolean()</span><br></pre>            </td>        </tr>    </table></figure><p><strong>控制混淆</strong></p><p>控制混淆是指对程序的控制流进行转换变化，常见的方式有插入僵尸代码、控制流平坦化</p><p>插入僵尸代码：插入僵尸代码即插入无用的代码，增强调试难度</p><p>控制流平坦化：控制流平坦化,将原本的的执行流程平坦化。具体可自行搜索</p><p><strong>预防混淆</strong></p><p>主要体现在 提高反混淆的难度或检测现有混淆器中的漏洞设计</p><h3 id="JS虚拟机"><a href="#JS虚拟机" class="headerlink" title="JS虚拟机"></a>JS虚拟机</h3><p>自定义或定制JavaScript虚拟机，基于给予二进制文件获取结果</p><h3 id="Android-iOS-SDK-加固保护"><a href="#Android-iOS-SDK-加固保护" class="headerlink" title="Android/iOS SDK 加固保护"></a>Android/iOS SDK 加固保护</h3><p><strong>代码混淆</strong></p><blockquote>    <p>具体可参考JS混淆部分，殊归同途</p></blockquote><p><strong>Dex 加固与抽取</strong></p><p>​ Dex 加固即将需要保护的代码单独生成Dex，在so加载时解密jar并通过DexClassLoader加载到内存里。该方案的主要问题在于解密后的Dex会以文件形式存储在手机内存中，而且通过内存dump 的方式能够获取解密后的jar 包，而没有生成文件加载的方式存在很多兼容性的问题</p><p>​ 在实际对抗环境下，Dex 无论如何保护，都有方法还原至原始的Dex，进而反编译得到Java 代码。而C 代码相对而言较难逆向。Java2c 是指将原有的Java 代码抽取出来，通过jni 在native 层反射实现。</p><p>流程如下：Dex→smali→抽取+native 化→生成so</p><p>抽取后的原始Java 函数，反编译出来是native 函数，在运行过程中也不会还原。Java2c 配合C 语言的代码混淆技术和字符串混淆技术，可以对Android 的Java 代码起到很好的保护效果。同时也不需要对原始Java 代码进行重写</p><p><strong>LLVM</strong></p><p>LLVM 是Low Level Virtual Machine 的缩写，其定位是一个比较底层的虚拟机。然而LLVM 本身并不是一个完整的编译器，LLVM 是一个编译器基础架构，把很多编译器需要的功能以可调用的模块形式实现出来并包装成库，其他编译器实现者可以根据自己的需要使用或扩展，主要聚焦于编译器后端功能，如代码生成、代码优化、JIT 等。</p><p><strong>代码虚拟化</strong></p><p>​ 代码虚拟化保护技术是一种比Dex 文件保护、Java2c 技术更强的安全防护技术，可以更有效地对抗逆向工程或破解，避免造成核心技术和风控逻辑被泄密的问题。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line">graph LR</span><br><span class="line">A(已有)&#x3D;&#x3D;无数次的中间转换&#x3D;&#x3D;&gt; B1(所需)</span><br></pre>            </td>        </tr>    </table></figure><p>以上便是本人对于所见所知所想的反爬虫，各种加密、编译、混淆等。中间围绕无数种可能。一起加油吧！！！</p><p>好像什么都说了，什么都没说。望君参考却不限于此。</p><p>总体来说就是抓包、请求前校验、请求校验、数据保护。以及风控、验证码、及对于代码进行保护。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;知己知彼，百战不殆 ——《孙子兵法》。&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;本文仅总结鄙人所知的反爬虫方式，不涉猎任何具体的分析与绕过方案。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;反爬虫&quot;&gt;&lt;a href=&quot;#反爬虫&quot; class=&quot;headerl
      
    
    </summary>
    
    
      <category term="爬虫" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/"/>
    
      <category term="数据采集" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/"/>
    
    
      <category term="爬虫" scheme="https://paynewu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://paynewu.com/tags/Crawler/"/>
    
      <category term="Web Spider" scheme="https://paynewu.com/tags/Web-Spider/"/>
    
      <category term="数据采集" scheme="https://paynewu.com/tags/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的SQL使用之上</title>
    <link href="https://paynewu.com/3376299280.html"/>
    <id>https://paynewu.com/3376299280.html</id>
    <published>2021-08-23T14:37:55.000Z</published>
    <updated>2021-08-26T08:28:21.734Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SQL介绍"><a href="#SQL介绍" class="headerlink" title="SQL介绍"></a>SQL介绍</h2><p>结构化查询语言,5.7 以后符合SQL92严格模式,通过sql_mode参数来控制</p><p>DDL（Data Definition Language，数据定义语言）：用于定义数据库、数据表和列，可以用来创建、删除、修改数据库和数据表的结构，包含CREATE、DROP和ALTER等语句。</p><p>DML（Data Manipulation Language，数据操作语言）：用于操作数据记录，可以对数据库中数据表的数据记录进行增加、删除和修改等操作，包含INSERT、DELETE和UPDATE等语句。</p><p>DCL（Data Control Language，数据控制语言）：用于定义数据库的访问权限和安全级别，主要包含GRANT、REVOKE、COMMIT和ROLLBACK等语句。</p><p>DQL（Data Query Language，数据查询语言）：用于查询数据表中的数据记录，主要包含SELECT语句。</p><a id="more"></a><h2 id="DDL的应用"><a href="#DDL的应用" class="headerlink" title="DDL的应用"></a>DDL的应用</h2><h3 id="库"><a href="#库" class="headerlink" title="库"></a>库</h3><h4 id="增"><a href="#增" class="headerlink" title="增"></a>增</h4><p>建库规范：</p><ol>    <li>库名要和业务相关</li>    <li>库名不能有<strong>大写字母</strong>、<strong>数字</strong>开头</li>    <li>建库要加字符集</li></ol><figure class="highlight dart">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">create database [<span class="keyword">if</span> not exists] 数据库名 [charset 字符编码名称(utf8mb4)] [collate 排序规则(utf8mb4_general_ci)];</span><br></pre>            </td>        </tr>    </table></figure><h4 id="删"><a href="#删" class="headerlink" title="删"></a>删</h4><blockquote>    <p>生产中禁止使用</p></blockquote><figure class="highlight dart">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">drop database 数据库名</span><br></pre>            </td>        </tr>    </table></figure><h4 id="改"><a href="#改" class="headerlink" title="改"></a>改</h4><blockquote>    <p>先查在改</p></blockquote><figure class="highlight dart">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line">SHOW CREATE DATABASE 数据库名;</span><br><span class="line">ALTER DATABASE 数据库名 [charset 字符编码名称] [collate 排序规则];</span><br></pre>            </td>        </tr>    </table></figure><blockquote>    <p>注意：修改字符集，修改后的字符集一定是原字符集的严格超集</p></blockquote><h4 id="查（DQL）"><a href="#查（DQL）" class="headerlink" title="查（DQL）"></a>查（DQL）</h4><p>显示所有数据库 形式:show databases;</p><p>显示一个数据库的创建语句: show create database 数据库名;</p><p>其他:show charset; show collation;</p><p>当前选择的数据库:\s、select database();</p><h3 id="表"><a href="#表" class="headerlink" title="表"></a>表</h3><p><strong>创建表规范</strong></p><ol>    <li>库名需与业务相关，且小写与非数字开头，表、列均需有注释</li>    <li>注意字符集和存储引擎</li>    <li>选择<strong>合适</strong>的<strong>数据类型</strong></li>    <li>每个列设置为非空，若无法保证非空，用0来填充。</li></ol><h4 id="增-1"><a href="#增-1" class="headerlink" title="增"></a>增</h4><figure class="highlight sql">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> [<span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span>] 表名(</span><br><span class="line"> 字段<span class="number">1</span> 数据类型 [约束条件] [默认值],</span><br><span class="line"> 字段<span class="number">2</span> 数据类型 [约束条件] [默认值],</span><br><span class="line">  [表约束条件]</span><br><span class="line">) [表选项<span class="number">1</span>,表选项<span class="number">2</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># example</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="keyword">IF</span> <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> <span class="string">`ch_people_msg`</span> ( </span><br><span class="line">  <span class="string">`p_id`</span>  <span class="built_in">SERIAL</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT <span class="keyword">COMMENT</span> <span class="string">'用户id'</span> , </span><br><span class="line">  <span class="string">`p_uic`</span> <span class="built_in">CHAR</span>(<span class="number">18</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户身份证'</span>,</span><br><span class="line">  <span class="string">`p_nickname`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户昵称'</span>, </span><br><span class="line">  <span class="string">`p_gender`</span> ENUM(<span class="string">'m'</span>,<span class="string">'f'</span>, <span class="string">'n'</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'n'</span> <span class="keyword">COMMENT</span> <span class="string">'用户性别'</span>, </span><br><span class="line">  <span class="string">`p_age`</span> <span class="built_in">TINYINT</span> <span class="keyword">UNSIGNED</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> <span class="keyword">COMMENT</span> <span class="string">'用户年龄'</span>, </span><br><span class="line">  <span class="string">`p_pnum`</span> <span class="built_in">CHAR</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户电话'</span>, </span><br><span class="line">  <span class="string">`p_address`</span> <span class="built_in">VARCHAR</span>(<span class="number">100</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户地址'</span>, </span><br><span class="line">  <span class="string">`p_email`</span> <span class="built_in">VARCHAR</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'用户邮箱'</span>, </span><br><span class="line">  <span class="string">`p_add_time`</span> <span class="built_in">TIMESTAMP</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">NOW</span>() <span class="keyword">COMMENT</span> <span class="string">'统计用户时间'</span>,</span><br><span class="line">   PRIMARY <span class="keyword">KEY</span> (<span class="string">`p_id`</span>),</span><br><span class="line">   <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`p_uic`</span>(<span class="string">`p_uic`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span> = <span class="keyword">InnoDB</span> <span class="keyword">CHARSET</span>=utf8mb4 <span class="keyword">COLLATE</span> utf8mb4_general_ci <span class="keyword">COMMENT</span> = <span class="string">'中国成员信息表'</span>;</span><br></pre>            </td>        </tr>    </table></figure><blockquote>    <p>注意：字段结束为<code>,</code>分隔， 整体结束为<code>)</code>分隔</p></blockquote><h4 id="删除-生产中禁用命令"><a href="#删除-生产中禁用命令" class="headerlink" title="删除(生产中禁用命令)"></a>删除(生产中禁用命令)</h4><p>DROP TABLE table_name</p><h3 id="改-1"><a href="#改-1" class="headerlink" title="改"></a>改</h3><figure class="highlight sql">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name [<span class="keyword">ADD</span>、<span class="keyword">DROP</span>、<span class="keyword">MODIFY</span>]</span><br><span class="line"><span class="comment"># 增加字段'</span></span><br><span class="line"></span><br><span class="line"><span class="comment">## 在表首列加入p_num列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`ch_people_msg`</span> <span class="keyword">ADD</span> p_num <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">COMMENT</span> <span class="string">'数字'</span> <span class="keyword">FIRST</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在列p_nickname 后增加 p_wechat列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`ch_people_msg`</span> <span class="keyword">ADD</span> p_wechat <span class="built_in">VARCHAR</span>(<span class="number">64</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span>  <span class="keyword">COMMENT</span> <span class="string">'微信号'</span> <span class="keyword">AFTER</span> <span class="string">`p_nickname`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 在表中(最后)增加p_qq列</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`ch_people_msg`</span> <span class="keyword">ADD</span> p_qq <span class="built_in">VARCHAR</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">UNIQUE</span> <span class="keyword">COMMENT</span> <span class="string">'用户qq号'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除字段</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> table_name <span class="keyword">DROP</span> 字段名</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">`table_name`</span> <span class="keyword">MODIFY</span> 字段名 约束条件 默认值</span><br></pre>            </td>        </tr>    </table></figure><h4 id="表属性查询（DQL）"><a href="#表属性查询（DQL）" class="headerlink" title="表属性查询（DQL）"></a>表属性查询（DQL）</h4><figure class="highlight sql">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment"># 罗列所有表</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>；</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看表状态</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">table</span> <span class="keyword">status</span> [<span class="keyword">from</span> db_name] [<span class="keyword">like</span> table_name];</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看表结构</span></span><br><span class="line">desc `table_name`;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看创建表语句</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">create</span> <span class="keyword">table</span> <span class="string">`table_name`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建相同类型的表</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`db_name_2`</span> <span class="keyword">LIKE</span> <span class="string">`db_name_1`</span>;</span><br></pre>            </td>        </tr>    </table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SQL介绍&quot;&gt;&lt;a href=&quot;#SQL介绍&quot; class=&quot;headerlink&quot; title=&quot;SQL介绍&quot;&gt;&lt;/a&gt;SQL介绍&lt;/h2&gt;
&lt;p&gt;结构化查询语言,5.7 以后符合SQL92严格模式,通过sql_mode参数来控制&lt;/p&gt;
&lt;p&gt;DDL（Data Definition Language，数据定义语言）：用于定义数据库、数据表和列，可以用来创建、删除、修改数据库和数据表的结构，包含CREATE、DROP和ALTER等语句。&lt;/p&gt;
&lt;p&gt;DML（Data Manipulation Language，数据操作语言）：用于操作数据记录，可以对数据库中数据表的数据记录进行增加、删除和修改等操作，包含INSERT、DELETE和UPDATE等语句。&lt;/p&gt;
&lt;p&gt;DCL（Data Control Language，数据控制语言）：用于定义数据库的访问权限和安全级别，主要包含GRANT、REVOKE、COMMIT和ROLLBACK等语句。&lt;/p&gt;
&lt;p&gt;DQL（Data Query Language，数据查询语言）：用于查询数据表中的数据记录，主要包含SELECT语句。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://paynewu.com/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://paynewu.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据类型</title>
    <link href="https://paynewu.com/1196530272.html"/>
    <id>https://paynewu.com/1196530272.html</id>
    <published>2021-08-21T15:07:19.000Z</published>
    <updated>2021-08-24T03:01:14.495Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL数据类型"><a href="#MySQL数据类型" class="headerlink" title="MySQL数据类型"></a>MySQL数据类型</h2><p>MySQL支持丰富的数据类型，总体上可以分为数值类型、日期和时间类型、字符串类型。</p><p>数值类型包括整数类型、浮点数类型和定点数类型；字符串类型包括文本字符串类型和二进制字符串类型;</p><p>具体入下所示</p><p>主要包括以下几大类：<br>数值类型：</p><ul>    <li>        <p>BIT、BOOL、TINYINT、SMALLINT、MEDIUM INT、 INT、 BIG INT、</p>    </li>    <li>        <p>FLOAT、DOUBLE、DECIMAL(浮点数类型)</p>    </li></ul><p>字符串类型：CHAR、VARCHAR、TINY TEXT、TEXT、MEDIUM TEXT、LONGTEXT、TINY BLOB、BLOB、MEDIUM BLOB、LONG BLOB、ENUM、SET</p><p>日期类型：Date、DateTime、TimeStamp、Time、Year</p><p>空间类型：Geometry、Point、LineString、MultiPoint、MultiLineString、MultiPolyGon、Polygon、GeometryCollection</p><p>其他类型：JSON</p><a id="more"></a><h3 id="数值类型"><a href="#数值类型" class="headerlink" title="数值类型"></a>数值类型</h3><blockquote>    <p>一个字节是8位</p>    <p>无符号（UNSIGNED）为翻倍</p></blockquote><h4 id="整型"><a href="#整型" class="headerlink" title="整型"></a>整型</h4><p>MySQL中的整数类型包括TINYINT、SMALLINT、MEDIUMINT、INT(INTEGER)和BIGINT。不同的整数类型，其所需要的存储空间和数值范围不尽相同</p><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">数值类型</th>                <th style="text-align:center">类型名称</th>                <th style="text-align:center">存储空间</th>                <th style="text-align:center">取值范围</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">TINY INT</td>                <td style="text-align:center">非常小的整数</td>                <td style="text-align:center">1个字节</td>                <td style="text-align:center">- 2 ^ 7 ~ 2 ^ 7 -1</td>            </tr>            <tr>                <td style="text-align:center">SMALL INT</td>                <td style="text-align:center">小整数</td>                <td style="text-align:center">2个字节</td>                <td style="text-align:center">- 2 ^ 15 ~ 2 ^ 15 -1</td>            </tr>            <tr>                <td style="text-align:center">MEDIUM INT</td>                <td style="text-align:center">中型的整数</td>                <td style="text-align:center">3个字节</td>                <td style="text-align:center">- 2 ^ 23 ~ 2 ^ 23 -1</td>            </tr>            <tr>                <td style="text-align:center">INT</td>                <td style="text-align:center">整数</td>                <td style="text-align:center">4个字节</td>                <td style="text-align:center">- 2 ^ 31 ~ 2 ^ 31 -1</td>            </tr>            <tr>                <td style="text-align:center">BIG INT</td>                <td style="text-align:center">大整数</td>                <td style="text-align:center">8个字节</td>                <td style="text-align:center">- 2 ^ 63 ~ 2 ^ 63 - 1</td>            </tr>        </tbody>    </table></div><blockquote>    <p>整数类型的显示宽度与数据类型的取值范围无关。</p>    <p>显示宽度只是指定最大显示的数字个数，如果在数据表中插入了大于显示宽度，但是并没有超过整数类型的数值范围的数据，依然可以正确地插入数据，并且能够正确地显示</p></blockquote><h4 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h4><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">数值类型</th>                <th style="text-align:center">类型名称</th>                <th style="text-align:center">存储空间</th>                <th style="text-align:center">取值范围</th>                <th>说明</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">DECIMAL(M,D)</td>                <td style="text-align:center">定点数类型</td>                <td style="text-align:center">M + 1 <br />或 <br />M + 2</td>                <td style="text-align:center">~</td>                <td>未打包的浮点数，用法类似于FLOAT与DOUBLE<br />浮点型在数据库中存放的是近似值，而定点类型在数据库中存放的是精确值。</td>            </tr>            <tr>                <td style="text-align:center">FLOAT</td>                <td style="text-align:center">单精度浮点类型</td>                <td style="text-align:center">4 个字节</td>                <td style="text-align:center">2 ^ 31 ~2 ^ 31 - 1</td>                <td>~</td>            </tr>            <tr>                <td style="text-align:center">DOUBLE</td>                <td style="text-align:center">双精度浮点类型</td>                <td style="text-align:center">8 个字节</td>                <td style="text-align:center">2 ^61 ~2 ^ 61 - 1</td>                <td>~</td>            </tr>        </tbody>    </table></div><blockquote>    <p>浮点数类型中的FLOAT和DOUBLE类型在不指定数据精度时，默认会按照实际的计算机硬件和操作系统决定的数据精度进行显示。如果用户指定的精度超出了浮点数类型的数据精度，则MySQL会自动进行四舍五入操作。</p></blockquote><h4 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h4><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">数值类型</th>                <th style="text-align:center">类型名称</th>                <th style="text-align:center">存储空间</th>                <th style="text-align:center">说明</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">BOOL</td>                <td style="text-align:center">布尔类型</td>                <td style="text-align:center">1字节</td>                <td style="text-align:center">TINY INT(1)的别名</td>            </tr>            <tr>                <td style="text-align:center">BIT</td>                <td style="text-align:center">位类型</td>                <td style="text-align:center"></td>                <td style="text-align:center">位类型(M), 每个值存储M位，默认为1，最大64</td>            </tr>            <tr>                <td style="text-align:center">SERIAL</td>                <td style="text-align:center">无符号大整数</td>                <td style="text-align:center">8 个字节</td>                <td style="text-align:center">BIG INT UNSIGNED NOT NULL AUTO_INCREMEINT UNIQUE</td>            </tr>        </tbody>    </table></div><p>浮点数类型中的FLOAT类型和DOUBLE类型在不指定精度时，默认会按照计算机硬件和操作系统决定的精度进行表示；而定点数类型中的DECIMAL类型不指定精度时，默认为DECIMAL(10,0)。</p><p>当数据类型的长度一定时，浮点数能够表示的数据范围更大，但是浮点数会引起精度问题，不适合存储高精度类型的数据。</p><h3 id="文本类型"><a href="#文本类型" class="headerlink" title="文本类型"></a>文本类型</h3><h4 id="字符类型"><a href="#字符类型" class="headerlink" title="字符类型"></a>字符类型</h4><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">字符类型</th>                <th style="text-align:center">类型名称</th>                <th style="text-align:center">存储空间</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">CHAR</td>                <td style="text-align:center">字符类型</td>                <td style="text-align:center">固定长度字符串，最多为255字符</td>            </tr>            <tr>                <td style="text-align:center">VARCHAR</td>                <td style="text-align:center">可变字符类型</td>                <td style="text-align:center">可变长字符串，最多为65,535字符</td>            </tr>            <tr>                <td style="text-align:center">TINYTEXT</td>                <td style="text-align:center">短文本类型</td>                <td style="text-align:center">可变长度字符串，最多为255字符</td>            </tr>            <tr>                <td style="text-align:center">TEXT</td>                <td style="text-align:center">文本类型</td>                <td style="text-align:center">可变长度字符串，最多为65,535字符</td>            </tr>            <tr>                <td style="text-align:center">MEDIUMTEXT</td>                <td style="text-align:center">中等文本类型</td>                <td style="text-align:center">可变长度，最多为16,777,215 字符</td>            </tr>            <tr>                <td style="text-align:center">LONGTEXT</td>                <td style="text-align:center">长文本类型</td>                <td style="text-align:center">可变长度，最多为4,294,967,295字符</td>            </tr>        </tbody>    </table></div><p><strong>char和varchar</strong></p><ol>    <li>        <p>char(n) 若存入字符数小于n，则以空格补于其后，查询之时再将空格去掉。所以char类型存储的字符串末尾不能有空格，varchar不限于此。 </p>    </li>    <li>        <p>char(n) 固定长度，char(4)不管是存入几个字符，都将占用4个字节，varchar是存入的实际字符数+1个字节（n&lt;=255）或2个字节(n&gt;255)，所以varchar(4),存入3个字符将占用4个字节。 </p>    </li>    <li>char类型的字符串检索速度要比varchar类型的快。</li></ol><p><strong>varchar和text</strong></p><ol>    <li>        <p>varchar可指定n，text不能指定，内部存储varchar是存入的实际字符数+1个字节（n&lt;=255）或2个字节(n&gt;255)，text是实际字符数+2个字节。 </p>    </li>    <li>        <p>text类型不能有默认值。 </p>    </li>    <li>varchar可直接创建索引，text创建索引要指定前多少个字符。varchar查询速度快于text,在都创建索引的情况下，text的索引似乎不起作用。</li></ol><h4 id="二进制类型"><a href="#二进制类型" class="headerlink" title="二进制类型"></a>二进制类型</h4><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">类型</th>                <th style="text-align:center">类型名称</th>                <th style="text-align:center">占位</th>                <th style="text-align:center">说明</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">BINARY</td>                <td style="text-align:center">二进制字符</td>                <td style="text-align:center"></td>                <td style="text-align:center">类似于CHAR（固定长度）类型，但存储的是<strong>二进制字节字符串</strong></td>            </tr>            <tr>                <td style="text-align:center">VARBINARY</td>                <td style="text-align:center">可变二进制字符</td>                <td style="text-align:center"></td>                <td style="text-align:center">类似于VARCHAR（可变长度）类型，但存储的是<strong>二进制字节字符串</strong></td>            </tr>            <tr>                <td style="text-align:center">TINYBLOB</td>                <td style="text-align:center">较小的大二进制对象</td>                <td style="text-align:center">1</td>                <td style="text-align:center">最大长度255的字节的BLOB序列<br />存储时在内容前将使用1个字节表示内容的大小</td>            </tr>            <tr>                <td style="text-align:center">BLOB</td>                <td style="text-align:center">大二进制对象</td>                <td style="text-align:center">2</td>                <td style="text-align:center">最大长度63535的字节的BLOB序列<br />存储时在内容前将使用2个字节表示内容的大小</td>            </tr>            <tr>                <td style="text-align:center">MEDIUM BLOB</td>                <td style="text-align:center">中等大的大二进制对象</td>                <td style="text-align:center">3</td>                <td style="text-align:center">最大长度1677215的字节的BLOB序列<br />存储时在内容前将使用3个字节表示内容的大小</td>            </tr>            <tr>                <td style="text-align:center">LONG BLOB</td>                <td style="text-align:center">大的大二进制对象</td>                <td style="text-align:center">4</td>                <td style="text-align:center">最大长度4294967296的字节的BLOB序列<br />存储时在内容前将使用4个字节表示内容的大小</td>            </tr>        </tbody>    </table></div><p>二进制数据(Blob)</p><p>1._BLOB和_text存储方式不同，_TEXT以文本方式存储，英文存储区分大小写，而_Blob是以二进制方式存储，不分大小写。</p><p>2._BLOB存储的数据只能整体读出。 </p><p>3._TEXT可以指定字符集，_BLO不用指定字符集。</p><h4 id="补充-1"><a href="#补充-1" class="headerlink" title="补充"></a>补充</h4><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">类型</th>                <th style="text-align:center">类型名称</th>                <th style="text-align:center">说明</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">ENUM</td>                <td style="text-align:center">枚举类型</td>                <td style="text-align:center">由一组固定的合法值组成的枚举</td>            </tr>            <tr>                <td style="text-align:center">SET</td>                <td style="text-align:center">集合类型</td>                <td style="text-align:center">由一组固定的合法值组成的集合</td>            </tr>        </tbody>    </table></div><h3 id="日期类型"><a href="#日期类型" class="headerlink" title="日期类型"></a>日期类型</h3><p>MySQL提供了表示日期和时间的数据类型，主要有YEAR类型、TIME类型、DATE类型、DATETIME类型和TIMESTAMP类型。</p><ul>    <li>        <p>DATE类型通常用来表示年月日；</p>    </li>    <li>        <p>DATETIME类型通常用来表示年、月、日、时、分、秒；</p>    </li>    <li>        <p>TIME类型通常用来表示时、分、秒。</p>    </li></ul><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">时间/日期类型</th>                <th style="text-align:center">类型名称</th>                <th style="text-align:center">占位</th>                <th style="text-align:center">日期格式</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">YEAR</td>                <td style="text-align:center">年</td>                <td style="text-align:center">1个字节</td>                <td style="text-align:center">YYYY</td>            </tr>            <tr>                <td style="text-align:center">TIME</td>                <td style="text-align:center">时间</td>                <td style="text-align:center">3个字节</td>                <td style="text-align:center">HH:MM:SS</td>            </tr>            <tr>                <td style="text-align:center">DATE</td>                <td style="text-align:center">日期</td>                <td style="text-align:center">3个字节</td>                <td style="text-align:center">YYYY—MM-DD</td>            </tr>            <tr>                <td style="text-align:center">TIMESTEAMP</td>                <td style="text-align:center">日期时间</td>                <td style="text-align:center">4个字节</td>                <td style="text-align:center">YYYY—MM-DD HH:MM:SS</td>            </tr>            <tr>                <td style="text-align:center">DATETIME</td>                <td style="text-align:center">日期时间</td>                <td style="text-align:center">8个字节</td>                <td style="text-align:center">YYYY—MM-DD HH:MM:SS</td>            </tr>        </tbody>    </table></div><blockquote>    <p>若定义一个字段为timestamp，这个字段里的时间数据会随其他字段修改的时候自动刷新，所以这个数据类型的字段可以存放这条记录最后被修改的时间</p>    <p>每种日期和时间类型都有一个有效值范围，如果超出这个有效值范围，则会以0进行存储</p></blockquote><h3 id="空间类型"><a href="#空间类型" class="headerlink" title="空间类型"></a>空间类型</h3><p>Geometry：存储任意几何体类型<br>Point：存储二维中的点类型<br>LineString：存储点之间的线型插值曲线类型<br>MultiPoint：存储点的集合类型<br>MultiLineString：存储点之间的线型插值曲线集合类型<br>MultiPolyGon：存储多边形集合类型<br>Polygon：存储多边形类型<br>GeometryCollection：存储任意类型集合体的集合类型</p><h3 id="数据类型的属性"><a href="#数据类型的属性" class="headerlink" title="数据类型的属性"></a>数据类型的属性</h3><h4 id="MySQL关键字-含义"><a href="#MySQL关键字-含义" class="headerlink" title="MySQL关键字 含义"></a>MySQL关键字 含义</h4><p>NULL 数据列可包含NULL值<br>NOT NULL 数据列不允许包含NULL值<br>DEFAULT 默认值<br>PRIMARY KEY 主键<br>AUTO_INCREMENT 自动递增，适用于整数类型<br>UNSIGNED 无符号<br>CHARACTER SET name 指定一个字符集</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MySQL数据类型&quot;&gt;&lt;a href=&quot;#MySQL数据类型&quot; class=&quot;headerlink&quot; title=&quot;MySQL数据类型&quot;&gt;&lt;/a&gt;MySQL数据类型&lt;/h2&gt;
&lt;p&gt;MySQL支持丰富的数据类型，总体上可以分为数值类型、日期和时间类型、字符串类型。&lt;/p&gt;
&lt;p&gt;数值类型包括整数类型、浮点数类型和定点数类型；字符串类型包括文本字符串类型和二进制字符串类型;&lt;/p&gt;
&lt;p&gt;具体入下所示&lt;/p&gt;
&lt;p&gt;主要包括以下几大类：&lt;br&gt;数值类型：&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;
        &lt;p&gt;BIT、BOOL、TINYINT、SMALLINT、MEDIUM INT、 INT、 BIG INT、&lt;/p&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;p&gt;FLOAT、DOUBLE、DECIMAL(浮点数类型)&lt;/p&gt;
    &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;字符串类型：CHAR、VARCHAR、TINY TEXT、TEXT、MEDIUM TEXT、LONGTEXT、TINY BLOB、BLOB、MEDIUM BLOB、LONG BLOB、ENUM、SET&lt;/p&gt;
&lt;p&gt;日期类型：Date、DateTime、TimeStamp、Time、Year&lt;/p&gt;
&lt;p&gt;空间类型：Geometry、Point、LineString、MultiPoint、MultiLineString、MultiPolyGon、Polygon、GeometryCollection&lt;/p&gt;
&lt;p&gt;其他类型：JSON&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://paynewu.com/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://paynewu.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库体系结构</title>
    <link href="https://paynewu.com/1647551827.html"/>
    <id>https://paynewu.com/1647551827.html</id>
    <published>2021-08-21T02:42:42.000Z</published>
    <updated>2021-08-24T03:01:14.489Z</updated>
    
    <content type="html"><![CDATA[<h2 id="MySQL体系结构"><a href="#MySQL体系结构" class="headerlink" title="MySQL体系结构"></a>MySQL体系结构</h2><h3 id="C-S-Client-Server-模型"><a href="#C-S-Client-Server-模型" class="headerlink" title="C/S(Client/Server)模型"></a>C/S(Client/Server)模型</h3><p>​ C/S结构是一种软件系统体系结构，</p><p>​ C是英文单词“Client”的首字母，即客户端的意思，C/S就是“Client/Server”的缩写，即“客户端/服务器”模式。MySQL C/S 可如下图所示</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gto7tgqgp1j60js0a8jrl02.jpg" alt=""></p><h4 id="MySQL-连接"><a href="#MySQL-连接" class="headerlink" title="MySQL 连接"></a>MySQL 连接</h4><p>实现MySQL连接的方式主要有两种，</p><ul>    <li>基于TCP/IP的连接，适用于远程、本地</li>    <li>基于Socket方式连接，仅限于本地连接</li></ul><figure class="highlight sh">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre>            </td>            <td class="code">                <pre><span class="line"><span class="comment"># TCP/IP方式（远程、本地）</span></span><br><span class="line">mysql -h 192.168.0.51 -P 3306 -u root -p paynepasswd</span><br><span class="line"></span><br><span class="line"><span class="comment"># Socket方式(仅本地)</span></span><br><span class="line">mysql -S /tmp/mysql.sock -u root -p paynepasswd</span><br></pre>            </td>        </tr>    </table></figure><a id="more"></a><p>在Linux中<code>/etc/my.cnf</code>文件中显示（已完成MySQL的安装）</p><figure class="highlight sh">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre>            </td>            <td class="code">                <pre><span class="line">socket=/tmp/mysql.sock</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/my.cnf    示例如下                                                                                    </span></span><br><span class="line">[client]</span><br><span class="line"><span class="comment">#password       = your_password</span></span><br><span class="line">port            = 3306</span><br><span class="line">socket          = /tmp/mysql.sock</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">port            = 3306</span><br><span class="line">socket          = /tmp/mysql.sock</span><br><span class="line">datadir = /www/server/data</span><br><span class="line">default_storage_engine = InnoDB</span><br><span class="line">performance_schema_max_table_instances = 400</span><br><span class="line">table_definition_cache = 400</span><br><span class="line">skip-external-locking</span><br><span class="line">key_buffer_size = 1024M</span><br><span class="line"></span><br><span class="line">---略</span><br></pre>            </td>        </tr>    </table></figure><h2 id="服务器端-实例"><a href="#服务器端-实例" class="headerlink" title="服务器端(实例):"></a>服务器端(实例):</h2><p>实例：My sqld + 工作线程 + 预分配内存 </p><p>功能：管理数据(增删改查等)</p><h3 id="mysqld逻辑结构"><a href="#mysqld逻辑结构" class="headerlink" title="mysqld逻辑结构"></a>mysqld逻辑结构</h3><p>mysqld的工作模型可分为两块，<code>server</code>层，<code>引擎层</code>，server层可细分为<code>连接层</code>、<code>SQL层</code></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtoa5gogpej60fv0dhjs202.jpg" alt=""></p><h4 id="连接层"><a href="#连接层" class="headerlink" title="连接层"></a>连接层</h4><ul>    <li>提供连接协议（socket、TCP/IP）</li>    <li>验证用户（账号名、密码、权限）</li>    <li>提供用户专用线程</li></ul><h4 id="SQL层"><a href="#SQL层" class="headerlink" title="SQL层"></a>SQL层</h4><ul>    <li>接收上层传送的SQL语句</li>    <li>语法验证模块：验证语句语法,是否满足SQL_MODE</li>    <li>语义检查：判断SQL语句的类型(DDL、DCL、DML、DQL)</li>    <li>执行权限检查：对语句执行前,进行预处理，生成解析树(执行计划)</li>    <li>优化器：根据解析器得出的多种执行计划，进行判断，选择最优的执行计划        <pre><code>    代价模型：资源（CPU IO MEM）的耗损评估性能好坏</code></pre>    </li>    <li>执行器：根据最优执行计划，执行SQL语句，产生执行结果</li>    <li>提供查询缓存（默认是没开启的）常使用redis、tair替代查询缓存功能</li>    <li>提供日志记录（日志管理章节）：binlog，默认是没开启的。</li></ul><h4 id="存储引擎层"><a href="#存储引擎层" class="headerlink" title="存储引擎层"></a>存储引擎层</h4><blockquote>    <p>类似于Linux中的文件系统</p></blockquote><ul>    <li>负责根据SQL层执行的结果，从磁盘上拿数据</li>    <li>将16进制的磁盘数据，交由SQL结构化化成表</li>    <li>连接层的专用线程返回给用户</li></ul><h2 id="数据库逻辑结构"><a href="#数据库逻辑结构" class="headerlink" title="数据库逻辑结构"></a>数据库逻辑结构</h2><p><img src="https://upload-images.jianshu.io/upload_images/16956686-127fff46fdb7fea9.png" alt=""></p><ul>    <li>库：库名，库属性</li>    <li>表：表名、属性、<ul>            <li>列:列名(字段),列属性(数据类型,约束等)</li>            <li>数据行(记录)</li>        </ul>    </li></ul><p><img src="https://upload-images.jianshu.io/upload_images/16956686-bfd40838aef7971b.png" alt="物理结构"></p><p>库的物理存储结构</p><ul>    <li>用文件系统的目录来存储</li></ul><p>表的物理存储结构</p><figure class="highlight angelscript">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre>            </td>            <td class="code">                <pre><span class="line">MyISAM（一种引擎）的表：</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql   <span class="number">10816</span> Apr <span class="number">18</span> <span class="number">8</span>:<span class="number">37</span> user.frm</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql     <span class="number">396</span> Apr <span class="number">18</span> <span class="number">11</span>:<span class="number">20</span>  user.MYD</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql    <span class="number">4096</span> Apr <span class="number">18</span> <span class="number">17</span>:<span class="number">48</span> user.MYI</span><br><span class="line"></span><br><span class="line">InnoDB(默认的存储引擎)的表：</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql    <span class="number">8636</span> Apr <span class="number">18</span> <span class="number">9</span>:<span class="number">37</span> time_zone.frm</span><br><span class="line">-rw-r----- <span class="number">1</span> mysql mysql   <span class="number">98304</span> Apr <span class="number">18</span> <span class="number">1</span>:<span class="number">37</span> time_zone.ibd</span><br><span class="line">time_zone.frm：存储列相关信息</span><br><span class="line">time_zone.ibd：数据行+索引</span><br></pre>            </td>        </tr>    </table></figure><p>表的段、区、页（16k）</p><figure class="highlight plain">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre>            </td>            <td class="code">                <pre><span class="line">页：最小的存储单元，默认16k</span><br><span class="line">区：64个连续的页，共1M</span><br><span class="line">段：一个表就是一个段，包含一个或多个区</span><br></pre>            </td>        </tr>    </table></figure><h2 id="执行SQL流程"><a href="#执行SQL流程" class="headerlink" title="执行SQL流程"></a>执行SQL流程</h2><blockquote>    <p>假设忽略权限验证、表操作验证</p></blockquote><ol>    <li>        <p>客户端发送一条SQL语句给MySQL服务器。</p>    </li>    <li>        <p>MySQL服务器先检查查询缓存，如果查询缓存中存在待查询的结果数据，则会立刻返回查询缓存中的结果数据，否则执行下一阶段的处理。</p>    </li>    <li>        <p>MySQL服务器通过解析器和预处理器对SQL语句进行解析和预处理，并将生成的SQL语句解析树传递给查询优化器。</p>    </li>    <li>        <p>查询优化器将SQL解析树进行进一步处理，生成对应的执行计划。</p>    </li>    <li>        <p>MySQL服务器根据查询优化器生成的执行计划，通过查询执行引擎调用存储引擎的API来执行查询操作。</p>    </li>    <li>        <p>存储引擎查询数据库中的数据，并将结果返回给查询执行引擎。</p>    </li>    <li>        <p>查询执行引擎将结果保存在查询缓存中，并通过数据库连接/线程处理返回给客户端。</p>    </li></ol><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtoc99udhyj60bw0ma0tu02.jpg" alt=""></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;MySQL体系结构&quot;&gt;&lt;a href=&quot;#MySQL体系结构&quot; class=&quot;headerlink&quot; title=&quot;MySQL体系结构&quot;&gt;&lt;/a&gt;MySQL体系结构&lt;/h2&gt;
&lt;h3 id=&quot;C-S-Client-Server-模型&quot;&gt;&lt;a href=&quot;#C-S-Client-Server-模型&quot; class=&quot;headerlink&quot; title=&quot;C/S(Client/Server)模型&quot;&gt;&lt;/a&gt;C/S(Client/Server)模型&lt;/h3&gt;
&lt;p&gt;​ C/S结构是一种软件系统体系结构，&lt;/p&gt;
&lt;p&gt;​ C是英文单词“Client”的首字母，即客户端的意思，C/S就是“Client/Server”的缩写，即“客户端/服务器”模式。MySQL C/S 可如下图所示&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://tva1.sinaimg.cn/large/008i3skNgy1gto7tgqgp1j60js0a8jrl02.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h4 id=&quot;MySQL-连接&quot;&gt;&lt;a href=&quot;#MySQL-连接&quot; class=&quot;headerlink&quot; title=&quot;MySQL 连接&quot;&gt;&lt;/a&gt;MySQL 连接&lt;/h4&gt;
&lt;p&gt;实现MySQL连接的方式主要有两种，&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;基于TCP/IP的连接，适用于远程、本地&lt;/li&gt;
    &lt;li&gt;基于Socket方式连接，仅限于本地连接&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;
    &lt;table&gt;
        &lt;tr&gt;
            &lt;td class=&quot;gutter&quot;&gt;
                &lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;
            &lt;/td&gt;
            &lt;td class=&quot;code&quot;&gt;
                &lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# TCP/IP方式（远程、本地）&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -h 192.168.0.51 -P 3306 -u root -p paynepasswd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# Socket方式(仅本地)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;mysql -S /tmp/mysql.sock -u root -p paynepasswd&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/table&gt;
&lt;/figure&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://paynewu.com/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://paynewu.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>MySQL数据库一些概念</title>
    <link href="https://paynewu.com/1376532068.html"/>
    <id>https://paynewu.com/1376532068.html</id>
    <published>2021-08-21T02:04:42.000Z</published>
    <updated>2021-08-24T03:01:14.478Z</updated>
    
    <content type="html"><![CDATA[<h1 id="MySQL数据库一些概念"><a href="#MySQL数据库一些概念" class="headerlink" title="MySQL数据库一些概念"></a>MySQL数据库一些概念</h1><h2 id="数据库的定义"><a href="#数据库的定义" class="headerlink" title="数据库的定义"></a>数据库的定义</h2><p>​ 数据库的定义在某种程度上，数据库代表着一种存储技术，并不局限于某种存储形式。一个简单的数据库可以将数据只存储在某台特定的计算机上，供某个特定的用户使用，而一个复杂的数据库可以将数据分散存储到多台计算机上，能够供成千上万的用户同时使用。从存储容量上来说，一个数据库的存储容量可以小到只能够存储几KB的数据，也可以大到存储TB甚至是PB级别的数据。</p><h3 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h3><p>​ 数据库（DataBase，DB）从本质上讲就是一个文件系统，它能够将数据有组织地集合在一起，按照一定的规则长期存储到计算机的磁盘中，并且能够供多个用户共享和使用，同时，用户能够对数据库中的数据进行插入、删除、修改和查询操作。数据库将数据进行集中存储和管理，有效地分离了应用程序和业务数据，降低了应用程序和业务数据之间的耦合性，大大简化了数据的存储和管理工作。同时，数据库提供了对存储数据的统一控制功能。数据除了能够被存储在计算机的磁盘中，还能够被存储在计算机的内存中，所以在某种程度上，可以将数据库分为永久型数据库和内存型数据库。</p><h3 id="数据表"><a href="#数据表" class="headerlink" title="数据表"></a>数据表</h3><p>​ 对于关系型数据库来说，数据表是以一个二维数组的形式来存储和管理数据的，它能够存储和管理数据并操作数据的逻辑结构。通常，一个数据表由行和列组成，一行数据能够表示一条完整的基础信息，所以行在关系型数据库中是组织数据的基本单位；列也被称为字段，它能够表示行的一个属性，同时，每一列都有相应的数据类型和数据长度的定义。</p><h3 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h3><p>​ 关系型数据库中的数据类型表示数据在数据库中的存储格式，其反映了数据在计算机中的存储格式。计算机根据不同的数据类型来组织和存储数据，并为不同数据类型的数据分配不同的存储空间。数据类型在大的分类上可以分为数值类型、日期和时间类型、字符串类型。在关系型数据库中，表中的每个字段都会被指定一种数据类型。例如，表1-1中，将商品编号、商品名称和商品类型定义为字符串类型，将商品价格定义为数值类型（定点数类型），将上架时间定义为日期和时间类型。</p><a id="more"></a><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3><p>​ 数据库中内置了一些函数，能够很方便地对数据进行数学计算、字符串处理、加密/解密及聚合处理等。相应地，函数可以分为数学函数、字符串函数、日期和时间函数、流程处理函数、加密与解密函数、数据聚合函数、获取数据库信息函数以及数据库中的其他函数等</p><h3 id="主键"><a href="#主键" class="headerlink" title="主键"></a>主键</h3><p>​ 在关系型数据库中，主键（Primary Key）又称为主码，能够唯一标识数据表中的一行记录。主键可以包含数据表中的一列或者多列，主键不能为空。同时，在同一个数据表中，主键列上不能有两行甚至多行相同的值，也就是说，在同一个数据表中，每行数据对应的主键列的值必须唯一。</p><h3 id="外键"><a href="#外键" class="headerlink" title="外键"></a>外键</h3><p>​ 外键从本质上讲就是一个引用，它引用的是另外一张表中的一列或者多列数据，被引用的表中的列需要具备主键约束或者唯一性约束。也就是说，被引用的列在其对应的数据表中能够唯一标识一行数据。外键反映的是两个表之间的连接关系。</p><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><p>​ 索引从本质上来讲是一种单独的数据库结构，它能够单独地存储在计算机的磁盘上，包含着对相关数据表中所有数据的引用指针。通过索引能够快速定位并查询出数据表中的一行或者多行数据，而不必进行全表扫描。在某种程度上，数据库的索引和书籍的目录有些类似。当查找书籍中的内容时，往往不会直接翻阅书籍的内容，这样查找起来相当烦琐；如果先根据书籍的目录定位到要查找的内容在书籍中的大概章节，然后再到相关的章节中去查找内容就比较简单了。索引使查询能够快速到达计算机中的某个位置去搜寻数据文件，而不必对所有的数据进行扫描。索引的建立，可以大大提高数据查询的效率</p><h3 id="视图"><a href="#视图" class="headerlink" title="视图"></a>视图</h3><p>​ 视图从本质上来讲是数据库的一种虚表，它是由SELECT查询语句从一张表或者多张表中导出的一种虚表。不能向视图中插入、更新和删除数据，即视图不负责数据的实际存储。当通过视图修改数据时，实际上修改的是构成视图的基本表中的数据，当修改了构成视图的基本表中的数据时，视图中的数据也会随之改变。使用视图能够大大简化数据库中表与表之间复杂的关联查询。</p><h3 id="存储过程"><a href="#存储过程" class="headerlink" title="存储过程"></a>存储过程</h3><p>​ 存储过程是一种SQL语句集，经过编译后存储在数据库中，通过指定存储过程的名称和参数信息来调用存储过程，使其完成特定的功能。在创建存储过程的时候，可以自定义变量来存储一些中间结果的数据，也可以在存储过程中定义一些执行逻辑和执行流程。存储过程经过一次编译后可以永久使用（只要不删除存储过程）。将一些复杂的查询逻辑封装在存储过程中重复使用，应用程序只需要调用存储过程的名称并传入相应的参数即可，大大简化了开发和数据查询的复杂度。另外，使用存储过程也可以防止用户直接访问数据表，只需要赋予用户对存储过程的访问权限即可。</p><h3 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h3><p>​ 触发器从本质上来讲是一种特殊的存储过程。触发器的执行不是由应用程序调用，也不是由手动执行的，而是由数据库中的事件执行的。当对某个表中的数据进行插入、更新和删除操作时，系统会自动执行相应的触发器。在某种程度上，触发器和钩子函数有些类似。应用程序在执行某项操作时，会自动调用相应的钩子函数，执行钩子函数的逻辑。而触发器是对数据表进行操作时自动执行的。当对数据表中的数据执行插入、更新和删除操作，需要自动执行一些数据库逻辑时，可以使用触发器来实现。</p><h3 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h3><p>MySQL中最常用到的存储引擎是InnoDB和MyISAM</p><h2 id="数据库系统"><a href="#数据库系统" class="headerlink" title="数据库系统"></a>数据库系统</h2><p>​ 在关系型数据库领域中，通常认为数据库系统涉及的软件主要由操作系统、数据库、数据库管理系统、以数据库管理系统为核心的应用开发工具和应用程序等几部分组成。</p><ul>    <li>操作系统（Operating System，OS）：直接运行于计算机硬件上的系统，为计算机中运行的各种软件提供基础环境支持。主流的操作系统包括Windows、UNIX/Linux和Mac OS等。</li>    <li>通常由某种或某几种高级编程语言编写，描述用户应用需求的应用程序、软件或某种管理系统。</li>    <li>数据库（DataBase，DB）：主要负责数据的存放，并在一定程度上保证数据的安全性、完整性和可靠性</li>    <li>数据库管理系统（DataBase Management System，DBMS）：主要用来对数据库进行管理，是数据库系统的核心组成部分。在实际工作中，人们往往不会直接面对数据库，而是通过数据库管理系统对数据库中的数据进行管理和维护。</li></ul><p>​ 数据库管理员（DataBase Administrator，DBA）：控制数据库整体结构的人，需要承担创建、管理、监控和维护整个数据库的责任，并保证数据库的安全、完整、高可用性与高可靠性。</p><h2 id="SQL语言"><a href="#SQL语言" class="headerlink" title="SQL语言"></a>SQL语言</h2><p>关系型数据库中专门提供了一种对数据库进行操作和查询的语言，叫作结构化查询语言，英文为Structured Query Language，简称SQL。</p><h3 id="SQL语言分类"><a href="#SQL语言分类" class="headerlink" title="SQL语言分类"></a>SQL语言分类</h3><ul>    <li>        <p>DDL（Data Definition Language，数据定义语言）：用于定义数据库、数据表和列，可以用来创建、删除、修改数据库和数据表的结构，包含CREATE、DROP和ALTER等语句。</p>    </li>    <li>        <p>DML（Data Manipulation Language，数据操作语言）：用于操作数据记录，可以对数据库中数据表的数据记录进行增加、删除和修改等操作，包含INSERT、DELETE和UPDATE等语句。</p>    </li>    <li>        <p>DCL（Data Control Language，数据控制语言）：用于定义数据库的访问权限和安全级别，主要包含GRANT、REVOKE、COMMIT和ROLLBACK等语句。</p>    </li>    <li>        <p>DQL（Data Query Language，数据查询语言）：用于查询数据表中的数据记录，主要包含SELECT语句。</p>    </li></ul><p>​ 关系型数据库提供了SQL语言，使应用程序开发人员与数据库管理和维护人员能够与数据库进行交互。但是在创建数据库和数据表之前，需要对数据库中的数据表进行设计，并能够正确设计出各数据表之间的关联关系。通常使用ER图（Entity Relationship Diagram），也就是实体-关系模型，来进行数据表的设计。ER图是用来描述现实世界的概念模型，在这个模型中有3个基本要素，分别为实体、属性和关系。</p><h3 id="ER图"><a href="#ER图" class="headerlink" title="ER图"></a>ER图</h3><p>​ 关系型数据库提供了SQL语言，使应用程序开发人员与数据库管理和维护人员能够与数据库进行交互。但是在创建数据库和数据表之前，需要对数据库中的数据表进行设计，并能够正确设计出各数据表之间的关联关系。通常使用ER图（Entity Relationship Diagram），也就是实体-关系模型，来进行数据表的设计。ER图是用来描述现实世界的概念模型，在这个模型中有3个基本要素，分别为实体、属性和关系。</p><h2 id="范式"><a href="#范式" class="headerlink" title="范式"></a>范式</h2><p>​ MySQL的三大范式能够规范开发人员对数据表的设计，使得开发人员能够设计出简洁、优雅的数据表结构。</p><h3 id="第一范式"><a href="#第一范式" class="headerlink" title="第一范式"></a>第一范式</h3><p>​ 主要是确保数据表中每个字段的值必须具有原子性，也就是说数据表中每个字段的值为<strong>不可再次拆分</strong>的<strong>最小数据单元</strong>。</p><h3 id="第二范式"><a href="#第二范式" class="headerlink" title="第二范式"></a>第二范式</h3><p>指在第一范式的基础上，确保数据表中除了<strong>主键之外的每个字段</strong>都必须<strong>依赖主键</strong>。</p><h3 id="第三范式"><a href="#第三范式" class="headerlink" title="第三范式"></a>第三范式</h3><p>在第二范式的基础上，确保数据表中的每一列都和主键字段直接相关</p><blockquote>    <p>也就是说要求数据表中的所有非主键字段不能依赖于其他非主键字段</p></blockquote><h3 id="反范式"><a href="#反范式" class="headerlink" title="反范式"></a>反范式</h3><p>​ 当数据库中的数据量比较大且系统的UV和PV访问频次比较高，若完全按照MySQL的三大范式设计数据表，读数据时会产生大量的关联查询，在一定程度上会影响数据库的读性能。此时，可以通过在数据表中增加冗余字段减少关联来提高数据库的读性能。</p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p>MySQL技术大全 — 冰河</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;MySQL数据库一些概念&quot;&gt;&lt;a href=&quot;#MySQL数据库一些概念&quot; class=&quot;headerlink&quot; title=&quot;MySQL数据库一些概念&quot;&gt;&lt;/a&gt;MySQL数据库一些概念&lt;/h1&gt;
&lt;h2 id=&quot;数据库的定义&quot;&gt;&lt;a href=&quot;#数据库的定义&quot; class=&quot;headerlink&quot; title=&quot;数据库的定义&quot;&gt;&lt;/a&gt;数据库的定义&lt;/h2&gt;
&lt;p&gt;​ 数据库的定义在某种程度上，数据库代表着一种存储技术，并不局限于某种存储形式。一个简单的数据库可以将数据只存储在某台特定的计算机上，供某个特定的用户使用，而一个复杂的数据库可以将数据分散存储到多台计算机上，能够供成千上万的用户同时使用。从存储容量上来说，一个数据库的存储容量可以小到只能够存储几KB的数据，也可以大到存储TB甚至是PB级别的数据。&lt;/p&gt;
&lt;h3 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h3&gt;
&lt;p&gt;​ 数据库（DataBase，DB）从本质上讲就是一个文件系统，它能够将数据有组织地集合在一起，按照一定的规则长期存储到计算机的磁盘中，并且能够供多个用户共享和使用，同时，用户能够对数据库中的数据进行插入、删除、修改和查询操作。数据库将数据进行集中存储和管理，有效地分离了应用程序和业务数据，降低了应用程序和业务数据之间的耦合性，大大简化了数据的存储和管理工作。同时，数据库提供了对存储数据的统一控制功能。数据除了能够被存储在计算机的磁盘中，还能够被存储在计算机的内存中，所以在某种程度上，可以将数据库分为永久型数据库和内存型数据库。&lt;/p&gt;
&lt;h3 id=&quot;数据表&quot;&gt;&lt;a href=&quot;#数据表&quot; class=&quot;headerlink&quot; title=&quot;数据表&quot;&gt;&lt;/a&gt;数据表&lt;/h3&gt;
&lt;p&gt;​ 对于关系型数据库来说，数据表是以一个二维数组的形式来存储和管理数据的，它能够存储和管理数据并操作数据的逻辑结构。通常，一个数据表由行和列组成，一行数据能够表示一条完整的基础信息，所以行在关系型数据库中是组织数据的基本单位；列也被称为字段，它能够表示行的一个属性，同时，每一列都有相应的数据类型和数据长度的定义。&lt;/p&gt;
&lt;h3 id=&quot;数据类型&quot;&gt;&lt;a href=&quot;#数据类型&quot; class=&quot;headerlink&quot; title=&quot;数据类型&quot;&gt;&lt;/a&gt;数据类型&lt;/h3&gt;
&lt;p&gt;​ 关系型数据库中的数据类型表示数据在数据库中的存储格式，其反映了数据在计算机中的存储格式。计算机根据不同的数据类型来组织和存储数据，并为不同数据类型的数据分配不同的存储空间。数据类型在大的分类上可以分为数值类型、日期和时间类型、字符串类型。在关系型数据库中，表中的每个字段都会被指定一种数据类型。例如，表1-1中，将商品编号、商品名称和商品类型定义为字符串类型，将商品价格定义为数值类型（定点数类型），将上架时间定义为日期和时间类型。&lt;/p&gt;
    
    </summary>
    
    
      <category term="数据库" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="https://paynewu.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="https://paynewu.com/tags/MySQL/"/>
    
      <category term="数据库" scheme="https://paynewu.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>漫游密码学</title>
    <link href="https://paynewu.com/2640324344.html"/>
    <id>https://paynewu.com/2640324344.html</id>
    <published>2021-08-20T15:55:50.000Z</published>
    <updated>2021-08-24T03:03:30.261Z</updated>
    
    <content type="html"><![CDATA[<p>作为一名优秀的新时代农民工，加密解密、编码算法自然逃不了。为了更安全、更隐蔽 数字签名，信息加密在开发过程中一定少不了，例如用户密码、关键消息等等，所以密码学至关重要。</p><p>作为爬虫工程师，逆向工程师见到目标的加密后的结果，而又无法有效的获取与定位到关键函数。那岂不是抓瞎，那么如果对于常见的加密、编码算法算法有足够的了解，那么是可以便捷很多，例如</p><ul>    <li>根据特征结果，直接Hook对应函数。通常有奇效</li>    <li>根据特征结果，与所知的参数进行尝试碰撞。也可大幅度减少分析时间</li></ul><p>等等，书到用时方恨少，知识与见识自然也是。</p><a id="more"></a><h2 id="0x01-概述"><a href="#0x01-概述" class="headerlink" title="0x01 概述"></a>0x01 概述</h2><p>​ 结合爬虫来看，对于密码学，加密与解密掌握自然的越精通越好，同时这又是一陡峭的过程。相较于与密码学相关知识结合爬虫来看并不一定要成为“密码学专家”，但确实拥有足够的<strong>了解</strong>将对于我们在逆向、防护方面有不错的帮助。就爬虫来说其中包含但不限于进制、摘要、非对称加密、对称加密等。</p><h2 id="0x02-加密与解密"><a href="#0x02-加密与解密" class="headerlink" title="0x02 加密与解密"></a>0x02 加密与解密</h2><p>加密，是以某种特殊的算法改变原有的信息数据</p><p>解密，加密的逆过程，常为加密等逆处理。</p><p>具体实现有编码算法，摘要算法、对称加密、非对称加密等。当然这之间可以一次或多次、一个或多个过程使用</p><h2 id="0x03-编码算法"><a href="#0x03-编码算法" class="headerlink" title="0x03 编码算法"></a>0x03 编码算法</h2><p>编码是信息从一种形式或格式转换为另一种形式的过程。根据映射关系实现转换。</p><p>常见的算法有Base16、Base32、Base64</p><h2 id="0x04-摘要算法"><a href="#0x04-摘要算法" class="headerlink" title="0x04 摘要算法"></a>0x04 摘要算法</h2><p>​ 消息摘要算法的主要特征是<strong>加密过程不需要密钥</strong>，并且经过加密的数据<strong>理论</strong>上无法被解密，目前可以被解密逆向的只有<a href="https://baike.baidu.com/item/CRC32/7460858" target="_blank" rel="noopener">CRC32</a>算法，只有输入相同的明文数据经过相同的消息摘要算法才能得到相同的密文。消息摘要算法不存在密钥的管理与分发问题，较为适合于分布式网络上使用。由于其加密计算的工作量相当可观，这种算法通常只用于数据量有限的情况下的加密，</p><p>​ 消息摘要算法主要应用在“数字签名”领域，作为对明文的摘要算法。著名的摘要算法有MD5算法和SHA-1算法及其大量的变体。</p><blockquote>    <p>MD5:</p>    <blockquote>        <p>默认key:01234567890abdcdef</p>    </blockquote>    <p>变体：md2、md4、md5、hmac(带密码的md5)</p>    <p>种类：16位 32位 40位</p>    <p>SHA-1:</p>    <p>sha1 40位</p>    <p>sha256 64位</p>    <p>sha512 128位</p></blockquote><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><p>消息摘要是把任意长度的输入揉和而产生长度固定的<a href="https://baike.baidu.com/item/伪随机" target="_blank" rel="noopener">伪随机</a>输入的算法。消息摘要的主要特点有：</p><ol>    <li>        <p>无论输入的消息有多长，计算出来的消息摘要的长度总是固定的。例如应用MD5算法摘要的消息有128个比特位，用SHA-1算法摘要的消息最终有160比特位的输出，SHA-1的变体可以产生192比特位和256比特位的消息摘要。一般认为，摘要的最终输出越长，该摘要算法就越安全。</p>    </li>    <li>        <p>消息摘要看起来是“随机的”。这些比特看上去是胡乱的杂凑在一起的。可以用大量的输入来检验其输出是否相同，一般，不同的输入会有不同的输出，而且输出的摘要消息可以通过<a href="https://baike.baidu.com/item/随机性" target="_blank" rel="noopener">随机性</a>检验。但是，一个摘要并不是真正随机的，因为用相同的算法对相同的消息求两次摘要，其结果必然相同；而若是真正随机的，则无论如何都是无法重现的。因此消息摘要是“伪随机的”。</p>    </li>    <li>        <p>一般地，只要输入的消息不同，对其进行摘要以后产生的摘要消息也必不相同；但相同的输入必会产生相同的输出。这正是好的消息摘要算法所具有的性质：输入改变了，输出也就改变了；两条相似的消息的摘要确不相近，甚至会大相径庭。</p>    </li>    <li>        <p>消息摘要函数是无<a href="https://baike.baidu.com/item/陷门" target="_blank" rel="noopener">陷门</a>的单向函数，即只能进行正向的信息摘要，而无法从摘要中恢复出任何的消息，甚至根本就找不到任何与原信息相关的信息。当然，可以采用强力攻击的方法，即尝试每一个可能的信息，计算其摘要，看看是否与已有的摘要相同，如果这样做，最终肯定会恢复出摘要的消息。但实际上，要得到的信息可能是无穷个消息之一，所以这种强力攻击几乎是无效的。</p>    </li>    <li>        <p>好的摘要算法，没有人能从中找到“碰撞”，虽然“碰撞”是肯定存在的。即对于给定的一个摘要，不可能找到一条信息使其摘要正好是给定的。或者说，无法找到两条消息，使它们的摘要相同。</p>    </li></ol><h2 id="0x05加密"><a href="#0x05加密" class="headerlink" title="0x05加密"></a>0x05加密</h2><p>​ 加密一般分为对称式加密以及非对称式加密两类。采用的比较广泛的是对称式加密，主要特点是加密和解密使用同一个密钥。</p><p>​ 而非对称式加密在进行加密时则使用了两个密钥，加密和解密过程中分别使用不同的密钥，这两个密钥分别为“公钥”以及“私钥”，想要能正常完成加密解密过程，就必需配对使用，而在使用过程中，“公钥”是公开的，“私钥”则必须由发送人保密，同时只能由持有人所有。</p><h3 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h3><p>​ 需要对加密和解密使用相同密钥的加密算法。由于其速度快，对称性加密通常在消息发送方需要加密大量数据时使用。对称性加密也称为密钥加密。</p><p>​ 所谓对称，就是采用这种加密方法的双方使用方式用同样的密钥进行加密和解密。密钥是控制加密及解密过程的指令。算法是一组规则，规定如何进行加密和解密。</p><p>​ 因此加密的安全性不仅取决于<strong>加密算法本身，密钥管理的安全性更是重要</strong>。因为加密和解密都使用同一个密钥，如何把密钥安全地传递到解密者手上就成了必须要解决的问题。对称加密算法中常用的算法有：<a href="https://baike.baidu.com/item/DES" target="_blank" rel="noopener">DES</a>、<a href="https://baike.baidu.com/item/3DES" target="_blank" rel="noopener">3DES</a>、TDEA、<a href="https://baike.baidu.com/item/Blowfish" target="_blank" rel="noopener">Blowfish</a>、RC2、RC4、<a href="https://baike.baidu.com/item/RC5" target="_blank" rel="noopener">RC5</a>、<a href="https://baike.baidu.com/item/IDEA" target="_blank" rel="noopener">IDEA</a>、SKIPJACK等。</p><p>采用单钥密码的加密方法，同一个密钥可以同时用来加密和解密，这种加密方法称为对称加密，也称为单密钥加密。常用的单向加密算法：</p><p>1、DES（Data Encryption Standard）：<a href="https://baike.baidu.com/item/数据加密标准/1577169" target="_blank" rel="noopener">数据加密标准</a>，速度较快，适用于加密大量数据的场合；</p><p>2、3DES（Triple DES）：是基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高；</p><p>3、AES（Advanced Encryption Standard）：<a href="https://baike.baidu.com/item/高级加密标准/468774" target="_blank" rel="noopener">高级加密标准</a>，是下一代的加密算法标准，速度快，安全级别高，支持128、192、256、512位密钥的加密；</p><p>4、Blowfish</p><p><strong>算法特征</strong></p><p>1、加密方和解密方使用同一个密钥；</p><p>2、加密解密的速度比较快，适合数据比较长时的使用；</p><p>3、密钥传输的过程不安全，且容易被破解，密钥管理也比较麻烦；</p><h3 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h3><p>非对称加密算法需要两个<a href="https://baike.baidu.com/item/密钥/101144" target="_blank" rel="noopener">密钥</a>来进行加密和解密，这两个密钥是<a href="https://baike.baidu.com/item/公开密钥/7453570" target="_blank" rel="noopener">公开密钥</a>（public key，简称公钥）和私有密钥（private key，简称私钥）。</p><ul>    <li><strong>RSA：</strong>RSA 是一种目前应用非常广泛、历史也比较悠久的非对称秘钥加密技术，在1977年被麻省理工学院的罗纳德·李维斯特（Ron Rivest）、阿迪·萨莫尔（Adi Shamir）和伦纳德·阿德曼（Leonard Adleman）三位科学家提出，由于难于破解，RSA 是目前应用最广泛的数字加密和签名技术，比如国内的支付宝就是通过RSA算法来进行签名验证。它的安全程度取决于秘钥的长度，目前主流可选秘钥长度为 1024位、2048位、4096位等，理论上秘钥越长越难于破解，按照维基百科上的说法，小于等于256位的秘钥，在一台个人电脑上花几个小时就能被破解，512位的秘钥和768位的秘钥也分别在1999年和2009年被成功破解，虽然目前还没有公开资料证实有人能够成功破解1024位的秘钥，但显然距离这个节点也并不遥远，所以目前业界推荐使用 2048 位或以上的秘钥，不过目前看 2048 位的秘钥已经足够安全了，支付宝的官方文档上推荐也是2048位，当然更长的秘钥更安全，但也意味着会产生更大的性能开销。</li>    <li><strong>DSA：</strong>既 Digital Signature Algorithm，数字签名算法，他是由美国国家标准与技术研究所（NIST）与1991年提出。和 RSA 不同的是 DSA 仅能用于数字签名，不能进行数据加密解密，其安全性和RSA相当，但其性能要比RSA快。</li>    <li><strong>ECDSA：</strong>Elliptic Curve Digital Signature Algorithm，椭圆曲线签名算法，是ECC（Elliptic curve cryptography，椭圆曲线密码学）和 DSA 的结合，椭圆曲线在密码学中的使用是在1985年由Neal Koblitz和Victor Miller分别独立提出的，相比于RSA算法，ECC 可以使用更小的秘钥，更高的效率，提供更高的安全保障，据称256位的ECC秘钥的安全性等同于3072位的RSA秘钥，和普通DSA相比，ECDSA在计算秘钥的过程中，部分因子使用了椭圆曲线算法。</li></ul><h3 id="加密小结"><a href="#加密小结" class="headerlink" title="加密小结"></a>加密小结</h3><p>对称加密只需要获取到公钥即可，进行解密</p><p><a href="https://baike.baidu.com/item/非对称加密算法" target="_blank" rel="noopener">非对称加密算法</a>需要两个<a href="https://baike.baidu.com/item/密钥" target="_blank" rel="noopener">密钥</a>：<a href="https://baike.baidu.com/item/公开密钥" target="_blank" rel="noopener">公开密钥</a>（publickey）和私有密钥（privatekey）。公开密钥与私有密钥是一对，如果用公开密钥对数据进行加密，只有用对应的私有密钥才能解密；如果用私有密钥对数据进行加密，那么只有用对应的公开密钥才能解密。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>​ 简单来说加密与解密就阐述了密码学基本特征，非专业的了解。可大致了解编码、摘要、对称加密、非对称加密即可。后有兴趣可深入</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为一名优秀的新时代农民工，加密解密、编码算法自然逃不了。为了更安全、更隐蔽 数字签名，信息加密在开发过程中一定少不了，例如用户密码、关键消息等等，所以密码学至关重要。&lt;/p&gt;
&lt;p&gt;作为爬虫工程师，逆向工程师见到目标的加密后的结果，而又无法有效的获取与定位到关键函数。那岂不是抓瞎，那么如果对于常见的加密、编码算法算法有足够的了解，那么是可以便捷很多，例如&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;根据特征结果，直接Hook对应函数。通常有奇效&lt;/li&gt;
    &lt;li&gt;根据特征结果，与所知的参数进行尝试碰撞。也可大幅度减少分析时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;等等，书到用时方恨少，知识与见识自然也是。&lt;/p&gt;
    
    </summary>
    
    
      <category term="密码学" scheme="https://paynewu.com/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
      <category term="加密与解密" scheme="https://paynewu.com/categories/%E5%AF%86%E7%A0%81%E5%AD%A6/%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86/"/>
    
    
      <category term="密码学" scheme="https://paynewu.com/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
      <category term="加密与解密" scheme="https://paynewu.com/tags/%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86/"/>
    
  </entry>
  
  <entry>
    <title>调试与反调试</title>
    <link href="https://paynewu.com/30883.html"/>
    <id>https://paynewu.com/30883.html</id>
    <published>2021-08-18T15:57:41.000Z</published>
    <updated>2021-08-24T03:03:30.272Z</updated>
    
    <content type="html"><![CDATA[<h1 id="调试与反调试"><a href="#调试与反调试" class="headerlink" title="调试与反调试"></a>调试与反调试</h1><p>相信各位如果从事爬虫开发、反爬虫开发、逆向工程师及相关岗位的开发，一定逃不开调试、反调试。那调试与反调是什么呢？以下为浏览器为例</p><p>调试：自然就是为了分析获取某关键加密参数，便对于目标网站的JS进行分析。</p><p>反调试：为了参数更加安全，更加难以破解。在合适处增加障碍增强调试难度</p><p>简单来说调试就是为了获取对应的加密参数，而反调试是为了不那么容易调试，增加调试难度。</p><p>反调试可以分为调试检测、调试陷阱，而反反调试是伪装，是绕过。</p><a id="more"></a><h2 id="反调试常见手段"><a href="#反调试常见手段" class="headerlink" title="反调试常见手段"></a>反调试常见手段</h2><p>反调试无论具体实现何种方法进行反调试 如无限debugger、内存爆破、投毒、删文件、脏话等。这都离不开一入口—— <strong>调试检测</strong>，反过来思考反调试是为了区分正常用户与开发者人员都一种方式，那么如果可以检测到开发者调试那么就可以对其进行相关的操作。</p><h3 id="调试检测"><a href="#调试检测" class="headerlink" title="调试检测"></a>调试检测</h3><p>调试检测的方案有很多，只要一经出发便可反制调试者。常用的检测方案如下</p><h4 id="控制台检测"><a href="#控制台检测" class="headerlink" title="控制台检测"></a>控制台检测</h4><h5 id="检测控制台检测的原理"><a href="#检测控制台检测的原理" class="headerlink" title="检测控制台检测的原理"></a>检测控制台检测的原理</h5><ul>    <li>        <p>隐式的调用元素id</p>    </li>    <li>        <p>隐式的调用RegExp的tostring方法</p>    </li>    <li>        <p>console，打开控制台console运行，否则不执行</p>    </li>    <li>        <p>浏览器窗口内外高度差</p>    </li></ul><blockquote>    <p>打开内置的chrome devtools 将造成高度差不一致</p></blockquote><h4 id="格式化检测"><a href="#格式化检测" class="headerlink" title="格式化检测"></a>格式化检测</h4><p>格式化检测也很实现原理也很简单，调用RegExp匹配相关部分代码</p><blockquote>    <p> 一般情况下目标服务器下发的JS为经过压缩。而调试者为了便于调试一般会对代码进行格式化，一旦检测点被格式化便可被RegExp检测</p></blockquote><h3 id="Hook检测"><a href="#Hook检测" class="headerlink" title="Hook检测"></a>Hook检测</h3><p>函数检测：采集调用 toString 方法对内容进行校验（伪造 toString 方法即可绕过）</p><p>对象检测：通过 <code>Object.defineProperty</code> 方法修改属性是不可更改的（可复写 debugger 即可）</p><h3 id="浏览器与浏览器指纹检测"><a href="#浏览器与浏览器指纹检测" class="headerlink" title="浏览器与浏览器指纹检测"></a>浏览器与浏览器指纹检测</h3><p>浏览器与浏览器指纹检测可检测的范围更广，更细致。具体请参考浏览器的相关api。</p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><p>调用时间差检测</p><blockquote>    <p>调试离不开debugger、断点，调用时间过长可视为被调试</p></blockquote><p>栈检测(在浏览器中可以使用caller获取调用栈)</p><blockquote>    <p>调试会打乱原有的调用栈</p></blockquote><p>tostings检测</p><blockquote>    <p>调试的时候难免遇到函数，习惯性的将鼠标放置在上面。hook Function toString可实现检测</p></blockquote><p>一切与“正常”执行相悖的都可作为检测点，也就是经常说的埋雷</p><h4 id="蜜罐"><a href="#蜜罐" class="headerlink" title="蜜罐"></a>蜜罐</h4><p><strong>蜜罐</strong> 也就是咱们所常听见的蜜罐。简单来说就是给予或引导调试者进入虚假的环境</p><p>蜜罐相对较于以上<strong>被动的检测</strong>拥有更多的灵活性，相对来说更加主动，更加激进。且蜜罐更一种实现思路，具体实现具体情况具体分析</p><h2 id="调试陷阱"><a href="#调试陷阱" class="headerlink" title="调试陷阱"></a>调试陷阱</h2><p>当检测到开发者正在调试，那么下一步就是抵御。实现思路一般有三种</p><ol>    <li>拦截：</li></ol><h3 id="预防调试"><a href="#预防调试" class="headerlink" title="预防调试"></a>预防调试</h3><p>主要目的为防止调试者继续或者进入下一步调试，常见的方式有引入僵尸代码、控制流等方式。</p><h3 id="阻断调试"><a href="#阻断调试" class="headerlink" title="阻断调试"></a>阻断调试</h3><p>较于拦截，阻断调试更加简单粗暴。常常伴随着无限循环。常见的实现方式有</p><figure class="highlight js">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre>            </td>            <td class="code">                <pre><span class="line"># while</span><br><span class="line"><span class="keyword">while</span>(ture)</span><br><span class="line"><span class="keyword">while</span>(大于<span class="number">0</span>的数)</span><br><span class="line"><span class="keyword">while</span>(!![])</span><br><span class="line">  </span><br><span class="line"># for</span><br><span class="line"><span class="keyword">for</span>(;;)</span><br></pre>            </td>        </tr>    </table></figure><p>递归</p><p>多函数死循环互调等实现内存爆破</p><h3 id="破坏调试"><a href="#破坏调试" class="headerlink" title="破坏调试"></a>破坏调试</h3><p>相对于阻断调试，会更加极端的手段，一方面对调试者信息进行采集、攻击调试者。例如删除文件、重置电脑、甚至释放病毒等</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本节详细了解了检测与反调试，检测核心原理为区分代码运行环境是否一致、是否合理从而区分为正常运行还是调试运行。检测到后进行反调试，反调试一般主要体现在预防、阻断、破坏。而绕过的方案自然从检测入手，模拟环境、模拟运行时，从而进行绕过。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;调试与反调试&quot;&gt;&lt;a href=&quot;#调试与反调试&quot; class=&quot;headerlink&quot; title=&quot;调试与反调试&quot;&gt;&lt;/a&gt;调试与反调试&lt;/h1&gt;
&lt;p&gt;相信各位如果从事爬虫开发、反爬虫开发、逆向工程师及相关岗位的开发，一定逃不开调试、反调试。那调试与反调是什么呢？以下为浏览器为例&lt;/p&gt;
&lt;p&gt;调试：自然就是为了分析获取某关键加密参数，便对于目标网站的JS进行分析。&lt;/p&gt;
&lt;p&gt;反调试：为了参数更加安全，更加难以破解。在合适处增加障碍增强调试难度&lt;/p&gt;
&lt;p&gt;简单来说调试就是为了获取对应的加密参数，而反调试是为了不那么容易调试，增加调试难度。&lt;/p&gt;
&lt;p&gt;反调试可以分为调试检测、调试陷阱，而反反调试是伪装，是绕过。&lt;/p&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="调试与反调试" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/%E8%B0%83%E8%AF%95%E4%B8%8E%E5%8F%8D%E8%B0%83%E8%AF%95/"/>
    
    
      <category term="爬虫" scheme="https://paynewu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="调试与反调试" scheme="https://paynewu.com/tags/%E8%B0%83%E8%AF%95%E4%B8%8E%E5%8F%8D%E8%B0%83%E8%AF%95/"/>
    
  </entry>
  
  <entry>
    <title>基于ssh-key实现服务器免密登陆</title>
    <link href="https://paynewu.com/34306.html"/>
    <id>https://paynewu.com/34306.html</id>
    <published>2021-08-05T14:39:59.000Z</published>
    <updated>2021-08-24T02:19:30.693Z</updated>
    
    <content type="html"><![CDATA[<p>远程连接Linux服务器，通常有两种方式，<br>第一种就是ssh直接远程连接， 第二种就是采用第三方的工具进行连接。<br>那么我本人是十分习惯以及喜欢终端（terminal）直接连接的。<br>一是因为快捷键更熟悉，另一方面是相对更安全。但采用ssh直接连接难免是有很多不便，<br>例如每次输入密码，例如每次输入远程ip地址。<br>密码我个人是喜欢设置成非常难以记忆的密码，保存在本地一个记事本或者文档里面，ip更不用说。记自然是不可能记的。那么如何实现ssh免密登陆以及ip的代号呢</p><a id="more"></a><h2 id="生成密钥"><a href="#生成密钥" class="headerlink" title="生成密钥"></a>生成密钥</h2><figure class="highlight shell">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">ssh-keygen -t rsa -C "your_email@youremailhost.com"</span><br></pre>            </td>        </tr>    </table></figure><h2 id="上传公钥到服务器"><a href="#上传公钥到服务器" class="headerlink" title="上传公钥到服务器"></a>上传公钥到服务器</h2><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub root@host</span><br></pre>            </td>        </tr>    </table></figure><h3 id="初次密码验证"><a href="#初次密码验证" class="headerlink" title="初次密码验证"></a>初次密码验证</h3><p>输入密码</p><p>下次直接使用ssh登陆即可实现免密登陆</p><figure class="highlight shell">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br></pre>            </td>            <td class="code">                <pre><span class="line">ssh user@host</span><br></pre>            </td>        </tr>    </table></figure><h3 id="小技巧"><a href="#小技巧" class="headerlink" title="小技巧"></a>小技巧</h3><p>远程登录的ip一般来说都是没有规律的，也十分的难记。那么如何才能给他一个好记的名字来替代，但又好区分呢。方法也非常的简单。只需要将<code>/etc/host</code> 进行配置本地的域名解析映射即可。在<code>/etc/hots</code>下配置如下内容。</p><figure class="highlight bash">    <table>        <tr>            <td class="gutter">                <pre><span class="line">1</span><br><span class="line">2</span><br></pre>            </td>            <td class="code">                <pre><span class="line">172.168.146.95s2</span><br><span class="line">172.168.146.35s1</span><br></pre>            </td>        </tr>    </table></figure><p>下次ssh 连接<code>172.168.146.95</code> 的时候，直接使用<code>ssh root@s2</code>,即可达到<code>ssh root@172.168.146.95</code>一样的效果</p><p>·</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;远程连接Linux服务器，通常有两种方式，&lt;br&gt;第一种就是ssh直接远程连接， 第二种就是采用第三方的工具进行连接。&lt;br&gt;那么我本人是十分习惯以及喜欢终端（terminal）直接连接的。&lt;br&gt;一是因为快捷键更熟悉，另一方面是相对更安全。但采用ssh直接连接难免是有很多不便，&lt;br&gt;例如每次输入密码，例如每次输入远程ip地址。&lt;br&gt;密码我个人是喜欢设置成非常难以记忆的密码，保存在本地一个记事本或者文档里面，ip更不用说。记自然是不可能记的。那么如何实现ssh免密登陆以及ip的代号呢&lt;/p&gt;
    
    </summary>
    
    
      <category term="ssh" scheme="https://paynewu.com/categories/ssh/"/>
    
      <category term="Linux" scheme="https://paynewu.com/categories/ssh/Linux/"/>
    
      <category term="服务器" scheme="https://paynewu.com/categories/ssh/Linux/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    
      <category term="ssh" scheme="https://paynewu.com/tags/ssh/"/>
    
      <category term="Linux" scheme="https://paynewu.com/tags/Linux/"/>
    
      <category term="服务器" scheme="https://paynewu.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>浏览器指纹在反爬虫领域的应用</title>
    <link href="https://paynewu.com/38968.html"/>
    <id>https://paynewu.com/38968.html</id>
    <published>2021-07-14T08:07:22.000Z</published>
    <updated>2021-08-24T02:42:08.261Z</updated>
    
    <content type="html"><![CDATA[<p>在上文中较为详细的介绍了指纹、设备指纹的常规获取与获取指纹环境监测，本节将详细的了解一下</p><p>浏览器指纹在反爬虫领域的应用，Android分析暂且搁置（其实是我也并不精通，pc端比较熟悉一点）</p><a id="more"></a><p>本节详细的聊聊Web指纹，在学习前必须先给自己的几个问题？</p><h2 id="什么是web指纹？"><a href="#什么是web指纹？" class="headerlink" title="什么是web指纹？"></a>什么是web指纹？</h2><p>见上文</p><h3 id="Web指纹有何作用？"><a href="#Web指纹有何作用？" class="headerlink" title="Web指纹有何作用？"></a>Web指纹有何作用？</h3><p>Web指纹的作用有很多，例如区分环境、区分机器人与真实用户，保障正常运行，只要是web浏览器的特征均可以作为web指纹</p><h2 id="Web指纹有哪些？"><a href="#Web指纹有哪些？" class="headerlink" title="Web指纹有哪些？"></a>Web指纹有哪些？</h2><p>web指纹如下</p><p>全局：window、document</p><p>环境：navigator、screen、history</p><p>请求：XMLHttpRequest、fetch、worker、<code>.$ajax</code>(jquery)、SSL/TSL</p><p>Dom：canvas、dom的操作</p><p>存储：storage IndexedDB cookie</p><p>其他：Cache、WebGL、AndioContext、WebRTC</p><p>NodeJS</p><p>全局变量：global</p><p>导包：require「危险⚠️」</p><p>可被重写的全局</p><p>觉大多数的Web API</p><p>全部的DOM节点</p><p>Web API：<a href="https://developer.mozilla.org/zh-CN/docs/Web/api" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/api</a></p><p>NodeJs API：中文：<a href="http://nodejs.cn/api/" target="_blank" rel="noopener">http://nodejs.cn/api/</a> 官方： <a href="https://nodejs.org/api/" target="_blank" rel="noopener">https://nodejs.org/api/</a></p><p>异同：<a href="http://nodejs.cn/api/path.html" target="_blank" rel="noopener">http://nodejs.cn/api/path.html</a></p><p>无论做何操作均可视为区分正常用户与机器人，如果被检测出来，最简单的自然是拿不到数据，bt一点的蜜罐、甚至强制删除电脑内文件。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在上文中较为详细的介绍了指纹、设备指纹的常规获取与获取指纹环境监测，本节将详细的了解一下&lt;/p&gt;
&lt;p&gt;浏览器指纹在反爬虫领域的应用，Android分析暂且搁置（其实是我也并不精通，pc端比较熟悉一点）&lt;/p&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/"/>
    
      <category term="JavaScript" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/JavaScript/"/>
    
      <category term="技巧" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/JavaScript/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="JS" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/JavaScript/%E6%8A%80%E5%B7%A7/JS/"/>
    
    
      <category term="爬虫" scheme="https://paynewu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://paynewu.com/tags/Crawler/"/>
    
      <category term="Web Spider" scheme="https://paynewu.com/tags/Web-Spider/"/>
    
      <category term="数据采集" scheme="https://paynewu.com/tags/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/"/>
    
      <category term="JS" scheme="https://paynewu.com/tags/JS/"/>
    
      <category term="Chrome" scheme="https://paynewu.com/tags/Chrome/"/>
    
      <category term="JavaScript" scheme="https://paynewu.com/tags/JavaScript/"/>
    
      <category term="技巧" scheme="https://paynewu.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>认识设备指纹</title>
    <link href="https://paynewu.com/15990.html"/>
    <id>https://paynewu.com/15990.html</id>
    <published>2021-07-12T14:09:17.000Z</published>
    <updated>2021-08-24T02:19:30.695Z</updated>
    
    <content type="html"><![CDATA[<h2 id="认识指纹"><a href="#认识指纹" class="headerlink" title="认识指纹"></a>认识指纹</h2><h3 id="什么是指纹"><a href="#什么是指纹" class="headerlink" title="什么是指纹"></a>什么是指纹</h3><p>设备指纹、浏览器指纹也是同理根据软硬件信息，设备版本、设备操作系统等差异性从而生成唯一的设备指纹。</p><blockquote>    <p>人的手有手指、手掌握纹，通过凹凸规则、分布状态的差异造就了<strong>相对</strong>其独一无二的特征。</p></blockquote><a id="more"></a><h3 id="指纹是怎么产生"><a href="#指纹是怎么产生" class="headerlink" title="指纹是怎么产生"></a>指纹是怎么产生</h3><p>手机的操作系统、浏览器厂商为了方便用户与开发者获取用户的设备信息预留了一些API供程序使用，用户和开发者可以通过这些API获取客户端相关的软硬件信息</p><p>这些信息因人而异通过部分信息来产生<strong>相对差异</strong>的信息来生成生成相对独立的设备ID。</p><blockquote>    <p>简单理解就是软件信息（部分或全部）、硬件信息（部分或全部）+ 指纹生成算法=生成指纹</p></blockquote><p>辨识度的信息可以是系统信息、软件信息、地理位置、时区、语言等等，所给予的信息决定了浏览器指纹的准确性。</p><h3 id="设备指纹究竟是如何区分的“唯一”"><a href="#设备指纹究竟是如何区分的“唯一”" class="headerlink" title="设备指纹究竟是如何区分的“唯一”"></a>设备指纹究竟是如何区分的“唯一”</h3><p>在一般情况下单一维度的差异性并不能形成标识设备的稳定特性，但可以经过收集大量的隐形特征通过数据分析、建模等方式等组合使用，可以更加精准的区分唯一</p><blockquote>    <p>例如：我们常见的双胞胎，它们长相相似、声音神似但根据以上两种特征无法有效的区分，但却可以根据更深层的习惯、喜好，甚至是某种条件反射的特殊因子，还是可以较为有效的降低“指纹”的碰撞率</p></blockquote><h3 id="什么信息是不能包含作为设备指纹？"><a href="#什么信息是不能包含作为设备指纹？" class="headerlink" title="什么信息是不能包含作为设备指纹？"></a>什么信息是不能包含作为设备指纹？</h3><p>根据国家法律要求，以下信息不能被作为指纹的因素</p><ul>    <li>手机号</li>    <li>通话记录</li>    <li>短信</li>    <li>通讯录</li>    <li>身份证号</li>    <li>等</li></ul><blockquote>    <p>虽然这些信息有非常强的一致性，可以非常有效的提高设备指纹的准确性</p>    <p>但是涉猎个人隐私的数据都是不可触碰的信息。网上绝非法外之地</p></blockquote><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>设备指纹相同，很大概率上是同一设备或用户；但设备指纹不同时，不一定不是同一设备或用户</p><h2 id="设备指纹实现原理与检测"><a href="#设备指纹实现原理与检测" class="headerlink" title="设备指纹实现原理与检测"></a>设备指纹实现原理与检测</h2><p>采集设备指纹需要满足两大特征：较为稳定的环境、篡改监测</p><h3 id="手机之Android设备指纹"><a href="#手机之Android设备指纹" class="headerlink" title="手机之Android设备指纹"></a>手机之Android设备指纹</h3><p>设备的Id需要兼具稳定性、唯一性，但Android系统的开源和碎片化导致API函数实现不尽相同。下表是Android系统比较稳定的设备参数</p><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">采集项</th>                <th style="text-align:center">中文含义</th>                <th style="text-align:center">特征</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">Android ID</td>                <td style="text-align:center">设备首次启动时自动随机生成的设备ID</td>                <td style="text-align:center">1.不需要授权，相同信号的手机小概率碰撞<br />2.恢复出厂设置将被重置</td>            </tr>            <tr>                <td style="text-align:center">IMEI/MEID</td>                <td style="text-align:center">设备码<br />移动、联通获取IMEI<br />电信获取MEID</td>                <td style="text-align:center">1.唯一性质较好，还是存在小概率碰撞<br />2.需要READ_PHONE_STATE权限<br />3.未含有卡槽的设备无法获取</td>            </tr>            <tr>                <td style="text-align:center">IMSI</td>                <td style="text-align:center">手机SIM卡识别</td>                <td style="text-align:center">1.需要READ_PHONE_STATE权限<br />2.更换手机卡会改变</td>            </tr>            <tr>                <td style="text-align:center">WI-FI MAC</td>                <td style="text-align:center">网卡MAC地址</td>                <td style="text-align:center">1.当未连接WI-FI时，有概率获取失败<br />2.个别只读存储器恢复出厂设置会被重置</td>            </tr>            <tr>                <td style="text-align:center">Bluetooth MAC</td>                <td style="text-align:center">蓝牙MAC地址</td>                <td style="text-align:center">高版本Android系统无法获取（约8.0以上）</td>            </tr>            <tr>                <td style="text-align:center">Serial</td>                <td style="text-align:center">设备串号</td>                <td style="text-align:center">同类型号的手机碰撞概率高</td>            </tr>            <tr>                <td style="text-align:center">Fingerprint</td>                <td style="text-align:center">设备多个硬件编号统称</td>                <td style="text-align:center">同类型号的手机碰撞概率高</td>            </tr>            <tr>                <td style="text-align:center">Storage</td>                <td style="text-align:center">内存、磁盘空间</td>                <td style="text-align:center">同类型号的手机碰撞概率高</td>            </tr>            <tr>                <td style="text-align:center">Adverting ID</td>                <td style="text-align:center">Google Play广告ID</td>                <td style="text-align:center">仅限于Google服务用户使用</td>            </tr>        </tbody>    </table></div><p>Android设备所有采集的项都是Android公开的API，采集项被大面积篡改的情况下不能保持设备ID不变，通常有效的方式就是<strong>检测和监控运行环境</strong>，针对Android设备指纹检测可归纳为</p><ol>    <li>通过安装安装包检测安装环境</li>    <li>通过特定的特征识别root环境</li>    <li>通过多种方案采集同一字段信息检测环境是否<strong>异常</strong></li>    <li>通过通用的修改方式识别（例如中间人攻击、注入、Hook、重放攻击等），从而达到检测环境的效果</li>    <li>通过特定特征识别（例如Xpose、Frida、模拟器等）检测</li></ol><h3 id="手机之IOS设备指纹"><a href="#手机之IOS设备指纹" class="headerlink" title="手机之IOS设备指纹"></a>手机之IOS设备指纹</h3><p>IOS相对开源的Android系统权限更加严格，且手机型号、系统版本较与Android更单一。由于权限等影响IOS能够获取的设备参数较少。如下表列举了较稳定的IOS设备参数</p><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">采集项</th>                <th style="text-align:center">中文含义</th>                <th style="text-align:center">特征</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">DeviceName</td>                <td style="text-align:center">设备名称</td>                <td style="text-align:center">1.用户可以自行修改，默认值存在很大的碰撞<br />2.自定义值有较强的特征</td>            </tr>            <tr>                <td style="text-align:center">WI-FI MAC</td>                <td style="text-align:center">网卡MAC地址</td>                <td style="text-align:center">唯一性好，高版本手机不能稳定性采集</td>            </tr>            <tr>                <td style="text-align:center">Boot time</td>                <td style="text-align:center">系统开机时间（μs微秒）</td>                <td style="text-align:center">1.存在少量碰撞，重启会发生改变<br />2.采集多次可能会发生变化</td>            </tr>            <tr>                <td style="text-align:center">Storage</td>                <td style="text-align:center">内存、磁盘空间</td>                <td style="text-align:center">同类型号的手机碰撞概率高</td>            </tr>            <tr>                <td style="text-align:center">IDFV</td>                <td style="text-align:center">厂商标识符</td>                <td style="text-align:center">1.不能跨合作方<br />2.删除本合作方APP后重新安装发生改变</td>            </tr>            <tr>                <td style="text-align:center">IDFA</td>                <td style="text-align:center">广告标识符</td>                <td style="text-align:center">1.需要广告权限<br />2。用户可以限制广告追踪</td>            </tr>        </tbody>    </table></div><p>IOS大部分篡改都是基于Hook进行改机，以及模拟器。</p><blockquote>    <p>IOS模拟器其本质为在X86_64架构上运行iPhone自带的模拟器，同时APP需要页数适配才能被安装</p></blockquote><p>IOS采集指纹检测可分为如下</p><ul>    <li>通过通用的Hook原理进行识别</li>    <li>通过特定的工具特征识别</li>    <li>寻找特定空间存储设备标识进行识别</li>    <li>对抗备份、抹机，进行识别</li></ul><h3 id="Web设备指纹"><a href="#Web设备指纹" class="headerlink" title="Web设备指纹"></a>Web设备指纹</h3><p>Web设备指纹（浏览器指纹）是指用户硬件、软件信息综合计算产生标识</p><h4 id="Web指纹特点"><a href="#Web指纹特点" class="headerlink" title="Web指纹特点"></a>Web指纹特点</h4><p>通过Javascript采集信息生成对应设备ID，与传统的Cookie技术相比较，Web设备指纹更加稳定</p><p>稳定浏览器版本采集参数，如下表所示</p><div class="table-container">    <table>        <thead>            <tr>                <th style="text-align:center">采集项</th>                <th style="text-align:center">中文含义</th>                <th style="text-align:center">特征</th>            </tr>        </thead>        <tbody>            <tr>                <td style="text-align:center">UserAgent</td>                <td style="text-align:center">浏览器客户端标识</td>                <td style="text-align:center">可以任意伪装与修改</td>            </tr>            <tr>                <td style="text-align:center">Gpu</td>                <td style="text-align:center">设备GPU特征</td>                <td style="text-align:center">1.碰撞率高<br />2.可跨浏览器</td>            </tr>            <tr>                <td style="text-align:center">Canvas</td>                <td style="text-align:center">2D指纹</td>                <td style="text-align:center">唯一性好（不同浏览器的指纹不同）</td>            </tr>            <tr>                <td style="text-align:center">Webgl</td>                <td style="text-align:center">3D指纹</td>                <td style="text-align:center">1.碰撞率高<br />2.可跨浏览器</td>            </tr>            <tr>                <td style="text-align:center">Plugin List</td>                <td style="text-align:center">浏览器自带插件列表</td>                <td style="text-align:center">当用户安装特殊插件，相同浏览器碰撞率高</td>            </tr>            <tr>                <td style="text-align:center">FontList</td>                <td style="text-align:center">字体列表</td>                <td style="text-align:center">当用户安装特殊字体，相同浏览器碰撞率高</td>            </tr>            <tr>                <td style="text-align:center">IP</td>                <td style="text-align:center">内网IP/外网IP</td>                <td style="text-align:center">1.切换网络会改变<br />2.内网采集局限性大</td>            </tr>            <tr>                <td style="text-align:center">TCP</td>                <td style="text-align:center">网络协议</td>                <td style="text-align:center">1. 不同操作系统协议差异大<br />2.不易被修改<br />3.用户无感知<br />4.碰撞率极高</td>            </tr>            <tr>                <td style="text-align:center">Navigator</td>                <td style="text-align:center">有关浏览器的信息</td>                <td style="text-align:center">相同系统、相同版本碰撞率极大</td>            </tr>        </tbody>    </table></div><p>Web指纹采集检测可如下</p><ol>    <li>识别浏览器异常环境</li>    <li>特征检测（原型链）检测Hook</li>    <li>特定特征识别JS是否调试与检测（控制台、debugger等）</li>    <li>特殊方式存储浏览器设备标识（如localStorage）</li></ol><p>Web指纹采集检测原理可如下</p><p><strong>无头浏览器识别</strong></p><ul>    <li>UA识别：检测/Headless Chrome/.test(Navigator.userAgent)</li>    <li>Webdriver检测: Webdriver是否在 navigator</li>    <li>selenium检测：检测<code>window.seleium</code></li>    <li>PhantomJS\nightmare-JS 检测</li>    <li>等</li></ul><p><strong>隐身模式识别</strong></p><p>Chrome：在隐身模式下，FileSystem API禁止，使用报异常</p><p>Firefox：在隐身模式下，IndexedDB执行Open报异常</p><p>Safari：在隐身模式下，localStorage对象存在，但运行setItem方法报异常</p><p><strong>控制台检测</strong><br>设备<br>隐式调用元素Id</p><p>隐式调用Regexp等toString</p><p><strong>Hook检测</strong></p><p>自定义Hook检测：在定义函数时将函数整体作为参数生成Hash值在执行该函数时校验Hash值</p><p>函数检测：采集调用toString方法对内容进行校验（伪造toString方法即可绕过）</p><p>对象检测：通过<code>Object.defineProperty</code>方法修改属性是不可更改的（可复写debugger即可）</p><p>其他检测：</p><p>SSL/TLS检测（产品：akamai）</p><h2 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h2><p>浏览器指纹在线检测：<a href="http://f.vision/" target="_blank" rel="noopener">http://f.vision/</a></p><p>修改浏览器指纹：<a href="https://www.cnblogs.com/68xi/p/13353140.html" target="_blank" rel="noopener">https://www.cnblogs.com/68xi/p/13353140.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;认识指纹&quot;&gt;&lt;a href=&quot;#认识指纹&quot; class=&quot;headerlink&quot; title=&quot;认识指纹&quot;&gt;&lt;/a&gt;认识指纹&lt;/h2&gt;
&lt;h3 id=&quot;什么是指纹&quot;&gt;&lt;a href=&quot;#什么是指纹&quot; class=&quot;headerlink&quot; title=&quot;什么是指纹&quot;&gt;&lt;/a&gt;什么是指纹&lt;/h3&gt;
&lt;p&gt;设备指纹、浏览器指纹也是同理根据软硬件信息，设备版本、设备操作系统等差异性从而生成唯一的设备指纹。&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;人的手有手指、手掌握纹，通过凹凸规则、分布状态的差异造就了&lt;strong&gt;相对&lt;/strong&gt;其独一无二的特征。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="调试" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/%E8%B0%83%E8%AF%95/"/>
    
      <category term="Hook" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/%E8%B0%83%E8%AF%95/Hook/"/>
    
    
      <category term="爬虫" scheme="https://paynewu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://paynewu.com/tags/Crawler/"/>
    
      <category term="JS" scheme="https://paynewu.com/tags/JS/"/>
    
      <category term="浏览器" scheme="https://paynewu.com/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="调试" scheme="https://paynewu.com/tags/%E8%B0%83%E8%AF%95/"/>
    
      <category term="Hook" scheme="https://paynewu.com/tags/Hook/"/>
    
  </entry>
  
  <entry>
    <title>常见安全产品(pc)</title>
    <link href="https://paynewu.com/63324.html"/>
    <id>https://paynewu.com/63324.html</id>
    <published>2021-07-11T13:36:28.000Z</published>
    <updated>2021-08-24T17:47:37.880Z</updated>
    
    <content type="html"><![CDATA[<p>在做爬虫的时候，很多时候都会遇到较成熟成体系的安全产品。更好的”认识”它，对于解决有至关重要的帮助。以下一起来了解一下网站常见防护产品及特征</p><blockquote>    <p>声明：本节不涉猎任何实际的产品破解，仅介绍其特征与辨别方式或思路。以下仅根据个人现所了解暂划分为一线、二线等。</p></blockquote><h3 id="一线"><a href="#一线" class="headerlink" title="一线"></a>一线</h3><blockquote>    <p>学习的对象，自研产品。安全系数高，分析较困难</p></blockquote><p>ali、akamai、jd、pdd、google(含无感验证码)、各大银行支付接口</p><a id="more"></a><h4 id="ali滑块"><a href="#ali滑块" class="headerlink" title="ali滑块"></a>ali滑块</h4><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gs4rk7k7tgj31p60qkq5m.jpg" alt=""></p><p>控制台中有g.alicdn.com字样，其中/后为版本号</p><h4 id="akamai"><a href="#akamai" class="headerlink" title="akamai"></a>akamai</h4><blockquote>    <p>主要在tls指纹进行相关加密</p></blockquote><h4 id="jd"><a href="#jd" class="headerlink" title="jd"></a>jd</h4><blockquote>    <p>自写的虚拟机</p></blockquote><h4 id="pdd"><a href="#pdd" class="headerlink" title="pdd"></a>pdd</h4><blockquote>    <p>Web pack 打包 + 风控</p></blockquote><h4 id="google-含无感验证码"><a href="#google-含无感验证码" class="headerlink" title="google(含无感验证码)"></a>google(含无感验证码)</h4><p>5s 盾 + 谷歌验证码</p><p>绕过方案与线索</p><ul>    <li>5秒盾 <a href="https://mp.weixin.qq.com/s/zwmatF3yTgSyS0gz8sinaA" target="_blank" rel="noopener">https://mp.weixin.qq.com/s/zwmatF3yTgSyS0gz8sinaA</a></li>    <li>谷歌验证码打码绕过方案<a href="https://cuiqingcai.com/30026.html" target="_blank" rel="noopener">https://cuiqingcai.com/30026.html</a></li></ul><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gtseloz24yj61d60naaca02.jpg" alt="image-20210825014317964"></p><h3 id="二线"><a href="#二线" class="headerlink" title="二线"></a>二线</h3><blockquote>    <p>可敬的对象</p></blockquote><p>加密与代码保护：瑞数信息（瑞数）、创宇超防（加速乐）、</p><p>验证码：极验、数美、五秒盾、易盾、顶象</p><h4 id="加密与代码保护"><a href="#加密与代码保护" class="headerlink" title="加密与代码保护"></a>加密与代码保护</h4><h5 id="瑞数信息（瑞数）"><a href="#瑞数信息（瑞数）" class="headerlink" title="瑞数信息（瑞数）"></a>瑞数信息（瑞数）</h5><ol>    <li>未带cookie访问首先是一段神奇的页面，如下图所示</li></ol><p><img src="/Users/stringle-004/Library/Application Support/typora-user-images/image-20210711183607468.png" alt="image-20210711183607468"></p><p>特征：</p><p>1.</p><p>一长段的：content。有点类似于ob的大数组</p><p>script标签中带有 r=“m”的字样</p><p>执行加密函数1，函数名为 <code>_$xx(xxx)</code></p><p>执行加密函数2（实际加密处）</p><ol>    <li>无比恶心的乱码</li></ol><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gsd76unofcj30sp02qt8m.jpg" alt="ddddd"></p><ol>    <li>        <p>动态js</p>    </li>    <li>        <p>版本号</p>        <p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gsd8b8qfa3j305y00i0si.jpg" alt=""></p>        <p><img src="/Users/stringle-004/Library/Application Support/typora-user-images/image-20210711192226256.png" alt="image-20210711192226256"></p>    </li></ol><p>首数字开头的编号，编号常见的有4、5、6代</p><h5 id="创宇超防（加速乐）"><a href="#创宇超防（加速乐）" class="headerlink" title="创宇超防（加速乐）"></a>创宇超防（加速乐）</h5><ol>    <li>未带cookies访问，先是一段神奇的JS，设置cookie。如下图所示</li></ol><p><img src="/Users/stringle-004/Library/Application Support/typora-user-images/image-20210711183150521.png" alt="image-20210711183150521"></p><p>实际内容如下图所示</p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gsd6qt4brnj311b02qjrj.jpg" alt=""></p><ol>    <li>        <p>魔改ob</p>        <p>用于cookies拼接</p>        <p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gsd6wykikcj31lf0u0n36.jpg" alt=""></p>    </li></ol><h4 id="验证码"><a href="#验证码" class="headerlink" title="验证码"></a>验证码</h4><h5 id="极验"><a href="#极验" class="headerlink" title="极验"></a>极验</h5><p>geetest(极验)官网：<a href="https://www.geetest.com/" target="_blank" rel="noopener">https://www.geetest.com/</a></p><p>demo：<a href="https://www.geetest.com/demo/" target="_blank" rel="noopener">https://www.geetest.com/demo/</a></p><p><img src="/Users/stringle-004/Library/Application Support/typora-user-images/image-20210711195920957.png" alt="image-20210711195920957"></p><!----------><h5 id="数美"><a href="#数美" class="headerlink" title="数美"></a>数美</h5><p>官网：<a href="https://www.ishumei.com/" target="_blank" rel="noopener">https://www.ishumei.com/</a></p><p>体验：<a href="https://www.ishumei.com/trial/captcha.html" target="_blank" rel="noopener">https://www.ishumei.com/trial/captcha.html</a></p><p><img src="/Users/stringle-004/Library/Application Support/typora-user-images/image-20210711195358760.png" alt="image-20210711195358760"></p><h5 id="网易易盾"><a href="#网易易盾" class="headerlink" title="网易易盾"></a>网易易盾</h5><p>官网：<a href="https://dun.163.com/" target="_blank" rel="noopener">https://dun.163.com/</a></p><p>Demo：<a href="https://dun.163.com/trial/space-inference" target="_blank" rel="noopener">https://dun.163.com/trial/space-inference</a></p><p><img src="/Users/stringle-004/Library/Application Support/typora-user-images/image-20210711200120467.png" alt="image-20210711200120467"></p><h5 id="Vaptcha"><a href="#Vaptcha" class="headerlink" title="Vaptcha"></a>Vaptcha</h5><p><a href="https://www.vaptcha.com/" target="_blank" rel="noopener">https://www.vaptcha.com/</a></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gsd8xpb30oj30vc0g1afq.jpg" alt=""></p><h5 id="顶象"><a href="#顶象" class="headerlink" title="顶象"></a>顶象</h5><p><img src="/Users/stringle-004/Library/Application Support/typora-user-images/image-20210711195702599.png" alt="image-20210711195702599"></p><h3 id="三线"><a href="#三线" class="headerlink" title="三线"></a>三线</h3><blockquote>    <p>主要来源于开源框架</p></blockquote><p>Ob混淆系（obfuscator、sojson、Jsaham）、Jsfuck、JJEncode、AAEncode、eval等、</p><p>obfuscator: <a href="https://obfuscator.io/" target="_blank" rel="noopener">https://obfuscator.io/</a></p><p>sojson：<a href="https://www.sojson.com/jsjiemi.html" target="_blank" rel="noopener">https://www.sojson.com/jsjiemi.html</a></p><p>Jsaham：<a href="http://www.jshaman.com/#section2" target="_blank" rel="noopener">http://www.jshaman.com/#section2</a></p><p>jstuck:<a href="http://www.jsfuck.com/" target="_blank" rel="noopener">http://www.jsfuck.com/</a> GitHub:<a href="https://github.com/aemkei/jsfuck" target="_blank" rel="noopener">https://github.com/aemkei/jsfuck</a></p><p>JJEncode:<a href="http://www.atoolbox.net/Tool.php?Id=704" target="_blank" rel="noopener">http://www.atoolbox.net/Tool.php?Id=704</a></p><p>JJEncode:<a href="http://www.atoolbox.net/Tool.php?Id=703" target="_blank" rel="noopener">http://www.atoolbox.net/Tool.php?Id=703</a></p><p>Eval:<a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval" target="_blank" rel="noopener">https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/eval</a>;</p><p>​ 分析：eval换为console.log()(前提：console.log未改写)</p><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><h5 id="ob系列"><a href="#ob系列" class="headerlink" title="ob系列"></a>ob系列</h5><p>特点</p><ol>    <li>大数组</li>    <li>数据移位（常见regex内存检测，建议不format绕过或remove regex）</li>    <li>解密函数（常见regex内存检测，建议不format绕过或remove regex）</li>    <li>定时器setInterval() 、setTimeout() + 无限debugger （可能含有）</li>    <li><strong>业务代码 + 控制流平坦化：（ob强度90%取决于此代码强度、这里是加密前的逻辑）</strong></li>    <li>控制流平坦化 + 无限debugger + 僵尸代码注入（一般不含有业务逻辑）</li></ol><p>Example:</p><ol>    <li>找到实际处（ob）</li>    <li>找前三段（数组、数组移位、解密函数），剪切出去</li>    <li>格式化控制流平坦化、实际逻辑。放回前剪切出去的内容</li>    <li>定位加密函数</li></ol><h5 id="Jsfuck、JJEncode、AAEncode"><a href="#Jsfuck、JJEncode、AAEncode" class="headerlink" title="Jsfuck、JJEncode、AAEncode"></a>Jsfuck、JJEncode、AAEncode</h5><p>配合eval类型防护：</p><blockquote>    <ol>        <li>直接放控制台console执行(报非unsafe错误)；点击错位堆栈直接完成脱壳</li>    </ol></blockquote><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gsdbgkbq35j30ix0bjwet.jpg" alt=""></p><p><img src="https://tva1.sinaimg.cn/large/008i3skNgy1gsdbfu2amkj31ae02maa0.jpg" alt=""></p><p><img src="/Users/stringle-004/Library/Application Support/typora-user-images/image-20210711211026971.png" alt="image-20210711211026971"></p><blockquote>    <p>2.控制台不报错，构建强制报错。删除一些代码（为了不干扰原本代码，建议删除括号或加无意义代码）</p>    <p>3。控制台报unsafe错误，自写html文件运行。参考以上</p></blockquote><p>混淆部分数字：</p><h3 id="四线"><a href="#四线" class="headerlink" title="四线"></a>四线</h3><blockquote>    <p>工程化工具、各种加密函数魔改、辅助作用</p></blockquote><p>webpack、vue、react、angular</p><p>webpack：<a href="https://webpack.docschina.org/" target="_blank" rel="noopener">https://webpack.docschina.org/</a></p><p>关键点：加载器（也叫分发器）</p><p>经典绕过方案：点位插桩</p><p>扣取思路：找到加载器、扣出加载器构建自己的加载器（网站与关键参数（函数））、补环境</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在做爬虫的时候，很多时候都会遇到较成熟成体系的安全产品。更好的”认识”它，对于解决有至关重要的帮助。以下一起来了解一下网站常见防护产品及特征&lt;/p&gt;
&lt;blockquote&gt;
    &lt;p&gt;声明：本节不涉猎任何实际的产品破解，仅介绍其特征与辨别方式或思路。以下仅根据个人现所了解暂划分为一线、二线等。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;一线&quot;&gt;&lt;a href=&quot;#一线&quot; class=&quot;headerlink&quot; title=&quot;一线&quot;&gt;&lt;/a&gt;一线&lt;/h3&gt;
&lt;blockquote&gt;
    &lt;p&gt;学习的对象，自研产品。安全系数高，分析较困难&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ali、akamai、jd、pdd、google(含无感验证码)、各大银行支付接口&lt;/p&gt;
    
    </summary>
    
    
      <category term="爬虫" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/"/>
    
      <category term="JavaScript" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/JavaScript/"/>
    
      <category term="技巧" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/JavaScript/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="JS" scheme="https://paynewu.com/categories/%E7%88%AC%E8%99%AB/Crawler/JavaScript/%E6%8A%80%E5%B7%A7/JS/"/>
    
    
      <category term="爬虫" scheme="https://paynewu.com/tags/%E7%88%AC%E8%99%AB/"/>
    
      <category term="Crawler" scheme="https://paynewu.com/tags/Crawler/"/>
    
      <category term="Web Spider" scheme="https://paynewu.com/tags/Web-Spider/"/>
    
      <category term="数据采集" scheme="https://paynewu.com/tags/%E6%95%B0%E6%8D%AE%E9%87%87%E9%9B%86/"/>
    
      <category term="JS" scheme="https://paynewu.com/tags/JS/"/>
    
      <category term="Chrome" scheme="https://paynewu.com/tags/Chrome/"/>
    
      <category term="JavaScript" scheme="https://paynewu.com/tags/JavaScript/"/>
    
      <category term="技巧" scheme="https://paynewu.com/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
</feed>
